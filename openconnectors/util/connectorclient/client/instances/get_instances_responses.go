// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/connectorclient/models"
)

// GetInstancesReader is a Reader for the GetInstances structure.
type GetInstancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInstancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInstancesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetInstancesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetInstancesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInstancesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetInstancesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewGetInstancesNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetInstancesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetInstancesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetInstancesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInstancesOK creates a GetInstancesOK with default headers values
func NewGetInstancesOK() *GetInstancesOK {
	return &GetInstancesOK{}
}

/*GetInstancesOK handles this case with default header values.

OK - Everything worked as expected
*/
type GetInstancesOK struct {
	Payload []*models.ElementInstance
}

func (o *GetInstancesOK) Error() string {
	return fmt.Sprintf("[GET /instances][%d] getInstancesOK  %+v", 200, o.Payload)
}

func (o *GetInstancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstancesBadRequest creates a GetInstancesBadRequest with default headers values
func NewGetInstancesBadRequest() *GetInstancesBadRequest {
	return &GetInstancesBadRequest{}
}

/*GetInstancesBadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type GetInstancesBadRequest struct {
}

func (o *GetInstancesBadRequest) Error() string {
	return fmt.Sprintf("[GET /instances][%d] getInstancesBadRequest ", 400)
}

func (o *GetInstancesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesUnauthorized creates a GetInstancesUnauthorized with default headers values
func NewGetInstancesUnauthorized() *GetInstancesUnauthorized {
	return &GetInstancesUnauthorized{}
}

/*GetInstancesUnauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type GetInstancesUnauthorized struct {
}

func (o *GetInstancesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /instances][%d] getInstancesUnauthorized ", 401)
}

func (o *GetInstancesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesForbidden creates a GetInstancesForbidden with default headers values
func NewGetInstancesForbidden() *GetInstancesForbidden {
	return &GetInstancesForbidden{}
}

/*GetInstancesForbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type GetInstancesForbidden struct {
}

func (o *GetInstancesForbidden) Error() string {
	return fmt.Sprintf("[GET /instances][%d] getInstancesForbidden ", 403)
}

func (o *GetInstancesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesNotFound creates a GetInstancesNotFound with default headers values
func NewGetInstancesNotFound() *GetInstancesNotFound {
	return &GetInstancesNotFound{}
}

/*GetInstancesNotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type GetInstancesNotFound struct {
}

func (o *GetInstancesNotFound) Error() string {
	return fmt.Sprintf("[GET /instances][%d] getInstancesNotFound ", 404)
}

func (o *GetInstancesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesMethodNotAllowed creates a GetInstancesMethodNotAllowed with default headers values
func NewGetInstancesMethodNotAllowed() *GetInstancesMethodNotAllowed {
	return &GetInstancesMethodNotAllowed{}
}

/*GetInstancesMethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type GetInstancesMethodNotAllowed struct {
}

func (o *GetInstancesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /instances][%d] getInstancesMethodNotAllowed ", 405)
}

func (o *GetInstancesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesNotAcceptable creates a GetInstancesNotAcceptable with default headers values
func NewGetInstancesNotAcceptable() *GetInstancesNotAcceptable {
	return &GetInstancesNotAcceptable{}
}

/*GetInstancesNotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type GetInstancesNotAcceptable struct {
}

func (o *GetInstancesNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /instances][%d] getInstancesNotAcceptable ", 406)
}

func (o *GetInstancesNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesConflict creates a GetInstancesConflict with default headers values
func NewGetInstancesConflict() *GetInstancesConflict {
	return &GetInstancesConflict{}
}

/*GetInstancesConflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type GetInstancesConflict struct {
}

func (o *GetInstancesConflict) Error() string {
	return fmt.Sprintf("[GET /instances][%d] getInstancesConflict ", 409)
}

func (o *GetInstancesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesUnsupportedMediaType creates a GetInstancesUnsupportedMediaType with default headers values
func NewGetInstancesUnsupportedMediaType() *GetInstancesUnsupportedMediaType {
	return &GetInstancesUnsupportedMediaType{}
}

/*GetInstancesUnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type GetInstancesUnsupportedMediaType struct {
}

func (o *GetInstancesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /instances][%d] getInstancesUnsupportedMediaType ", 415)
}

func (o *GetInstancesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesInternalServerError creates a GetInstancesInternalServerError with default headers values
func NewGetInstancesInternalServerError() *GetInstancesInternalServerError {
	return &GetInstancesInternalServerError{}
}

/*GetInstancesInternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type GetInstancesInternalServerError struct {
}

func (o *GetInstancesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /instances][%d] getInstancesInternalServerError ", 500)
}

func (o *GetInstancesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
