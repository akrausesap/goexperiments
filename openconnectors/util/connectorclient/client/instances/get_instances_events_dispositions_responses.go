// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/connectorclient/models"
)

// GetInstancesEventsDispositionsReader is a Reader for the GetInstancesEventsDispositions structure.
type GetInstancesEventsDispositionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstancesEventsDispositionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInstancesEventsDispositionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInstancesEventsDispositionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetInstancesEventsDispositionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetInstancesEventsDispositionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInstancesEventsDispositionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetInstancesEventsDispositionsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewGetInstancesEventsDispositionsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetInstancesEventsDispositionsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetInstancesEventsDispositionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetInstancesEventsDispositionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInstancesEventsDispositionsOK creates a GetInstancesEventsDispositionsOK with default headers values
func NewGetInstancesEventsDispositionsOK() *GetInstancesEventsDispositionsOK {
	return &GetInstancesEventsDispositionsOK{}
}

/*GetInstancesEventsDispositionsOK handles this case with default header values.

OK - Everything worked as expected
*/
type GetInstancesEventsDispositionsOK struct {
	Payload []*models.Event
}

func (o *GetInstancesEventsDispositionsOK) Error() string {
	return fmt.Sprintf("[GET /instances/events/dispositions][%d] getInstancesEventsDispositionsOK  %+v", 200, o.Payload)
}

func (o *GetInstancesEventsDispositionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstancesEventsDispositionsBadRequest creates a GetInstancesEventsDispositionsBadRequest with default headers values
func NewGetInstancesEventsDispositionsBadRequest() *GetInstancesEventsDispositionsBadRequest {
	return &GetInstancesEventsDispositionsBadRequest{}
}

/*GetInstancesEventsDispositionsBadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type GetInstancesEventsDispositionsBadRequest struct {
}

func (o *GetInstancesEventsDispositionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /instances/events/dispositions][%d] getInstancesEventsDispositionsBadRequest ", 400)
}

func (o *GetInstancesEventsDispositionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsDispositionsUnauthorized creates a GetInstancesEventsDispositionsUnauthorized with default headers values
func NewGetInstancesEventsDispositionsUnauthorized() *GetInstancesEventsDispositionsUnauthorized {
	return &GetInstancesEventsDispositionsUnauthorized{}
}

/*GetInstancesEventsDispositionsUnauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type GetInstancesEventsDispositionsUnauthorized struct {
}

func (o *GetInstancesEventsDispositionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /instances/events/dispositions][%d] getInstancesEventsDispositionsUnauthorized ", 401)
}

func (o *GetInstancesEventsDispositionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsDispositionsForbidden creates a GetInstancesEventsDispositionsForbidden with default headers values
func NewGetInstancesEventsDispositionsForbidden() *GetInstancesEventsDispositionsForbidden {
	return &GetInstancesEventsDispositionsForbidden{}
}

/*GetInstancesEventsDispositionsForbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type GetInstancesEventsDispositionsForbidden struct {
}

func (o *GetInstancesEventsDispositionsForbidden) Error() string {
	return fmt.Sprintf("[GET /instances/events/dispositions][%d] getInstancesEventsDispositionsForbidden ", 403)
}

func (o *GetInstancesEventsDispositionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsDispositionsNotFound creates a GetInstancesEventsDispositionsNotFound with default headers values
func NewGetInstancesEventsDispositionsNotFound() *GetInstancesEventsDispositionsNotFound {
	return &GetInstancesEventsDispositionsNotFound{}
}

/*GetInstancesEventsDispositionsNotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type GetInstancesEventsDispositionsNotFound struct {
}

func (o *GetInstancesEventsDispositionsNotFound) Error() string {
	return fmt.Sprintf("[GET /instances/events/dispositions][%d] getInstancesEventsDispositionsNotFound ", 404)
}

func (o *GetInstancesEventsDispositionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsDispositionsMethodNotAllowed creates a GetInstancesEventsDispositionsMethodNotAllowed with default headers values
func NewGetInstancesEventsDispositionsMethodNotAllowed() *GetInstancesEventsDispositionsMethodNotAllowed {
	return &GetInstancesEventsDispositionsMethodNotAllowed{}
}

/*GetInstancesEventsDispositionsMethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type GetInstancesEventsDispositionsMethodNotAllowed struct {
}

func (o *GetInstancesEventsDispositionsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /instances/events/dispositions][%d] getInstancesEventsDispositionsMethodNotAllowed ", 405)
}

func (o *GetInstancesEventsDispositionsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsDispositionsNotAcceptable creates a GetInstancesEventsDispositionsNotAcceptable with default headers values
func NewGetInstancesEventsDispositionsNotAcceptable() *GetInstancesEventsDispositionsNotAcceptable {
	return &GetInstancesEventsDispositionsNotAcceptable{}
}

/*GetInstancesEventsDispositionsNotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type GetInstancesEventsDispositionsNotAcceptable struct {
}

func (o *GetInstancesEventsDispositionsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /instances/events/dispositions][%d] getInstancesEventsDispositionsNotAcceptable ", 406)
}

func (o *GetInstancesEventsDispositionsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsDispositionsConflict creates a GetInstancesEventsDispositionsConflict with default headers values
func NewGetInstancesEventsDispositionsConflict() *GetInstancesEventsDispositionsConflict {
	return &GetInstancesEventsDispositionsConflict{}
}

/*GetInstancesEventsDispositionsConflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type GetInstancesEventsDispositionsConflict struct {
}

func (o *GetInstancesEventsDispositionsConflict) Error() string {
	return fmt.Sprintf("[GET /instances/events/dispositions][%d] getInstancesEventsDispositionsConflict ", 409)
}

func (o *GetInstancesEventsDispositionsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsDispositionsUnsupportedMediaType creates a GetInstancesEventsDispositionsUnsupportedMediaType with default headers values
func NewGetInstancesEventsDispositionsUnsupportedMediaType() *GetInstancesEventsDispositionsUnsupportedMediaType {
	return &GetInstancesEventsDispositionsUnsupportedMediaType{}
}

/*GetInstancesEventsDispositionsUnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type GetInstancesEventsDispositionsUnsupportedMediaType struct {
}

func (o *GetInstancesEventsDispositionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /instances/events/dispositions][%d] getInstancesEventsDispositionsUnsupportedMediaType ", 415)
}

func (o *GetInstancesEventsDispositionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsDispositionsInternalServerError creates a GetInstancesEventsDispositionsInternalServerError with default headers values
func NewGetInstancesEventsDispositionsInternalServerError() *GetInstancesEventsDispositionsInternalServerError {
	return &GetInstancesEventsDispositionsInternalServerError{}
}

/*GetInstancesEventsDispositionsInternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type GetInstancesEventsDispositionsInternalServerError struct {
}

func (o *GetInstancesEventsDispositionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /instances/events/dispositions][%d] getInstancesEventsDispositionsInternalServerError ", 500)
}

func (o *GetInstancesEventsDispositionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
