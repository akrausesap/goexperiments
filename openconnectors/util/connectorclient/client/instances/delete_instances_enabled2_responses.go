// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteInstancesEnabled2Reader is a Reader for the DeleteInstancesEnabled2 structure.
type DeleteInstancesEnabled2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteInstancesEnabled2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteInstancesEnabled2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteInstancesEnabled2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteInstancesEnabled2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteInstancesEnabled2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteInstancesEnabled2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDeleteInstancesEnabled2MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewDeleteInstancesEnabled2NotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteInstancesEnabled2Conflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeleteInstancesEnabled2UnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteInstancesEnabled2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteInstancesEnabled2OK creates a DeleteInstancesEnabled2OK with default headers values
func NewDeleteInstancesEnabled2OK() *DeleteInstancesEnabled2OK {
	return &DeleteInstancesEnabled2OK{}
}

/*DeleteInstancesEnabled2OK handles this case with default header values.

OK - Everything worked as expected
*/
type DeleteInstancesEnabled2OK struct {
}

func (o *DeleteInstancesEnabled2OK) Error() string {
	return fmt.Sprintf("[DELETE /instances/{id}/enabled][%d] deleteInstancesEnabled2OK ", 200)
}

func (o *DeleteInstancesEnabled2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabled2BadRequest creates a DeleteInstancesEnabled2BadRequest with default headers values
func NewDeleteInstancesEnabled2BadRequest() *DeleteInstancesEnabled2BadRequest {
	return &DeleteInstancesEnabled2BadRequest{}
}

/*DeleteInstancesEnabled2BadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type DeleteInstancesEnabled2BadRequest struct {
}

func (o *DeleteInstancesEnabled2BadRequest) Error() string {
	return fmt.Sprintf("[DELETE /instances/{id}/enabled][%d] deleteInstancesEnabled2BadRequest ", 400)
}

func (o *DeleteInstancesEnabled2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabled2Unauthorized creates a DeleteInstancesEnabled2Unauthorized with default headers values
func NewDeleteInstancesEnabled2Unauthorized() *DeleteInstancesEnabled2Unauthorized {
	return &DeleteInstancesEnabled2Unauthorized{}
}

/*DeleteInstancesEnabled2Unauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type DeleteInstancesEnabled2Unauthorized struct {
}

func (o *DeleteInstancesEnabled2Unauthorized) Error() string {
	return fmt.Sprintf("[DELETE /instances/{id}/enabled][%d] deleteInstancesEnabled2Unauthorized ", 401)
}

func (o *DeleteInstancesEnabled2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabled2Forbidden creates a DeleteInstancesEnabled2Forbidden with default headers values
func NewDeleteInstancesEnabled2Forbidden() *DeleteInstancesEnabled2Forbidden {
	return &DeleteInstancesEnabled2Forbidden{}
}

/*DeleteInstancesEnabled2Forbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type DeleteInstancesEnabled2Forbidden struct {
}

func (o *DeleteInstancesEnabled2Forbidden) Error() string {
	return fmt.Sprintf("[DELETE /instances/{id}/enabled][%d] deleteInstancesEnabled2Forbidden ", 403)
}

func (o *DeleteInstancesEnabled2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabled2NotFound creates a DeleteInstancesEnabled2NotFound with default headers values
func NewDeleteInstancesEnabled2NotFound() *DeleteInstancesEnabled2NotFound {
	return &DeleteInstancesEnabled2NotFound{}
}

/*DeleteInstancesEnabled2NotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type DeleteInstancesEnabled2NotFound struct {
}

func (o *DeleteInstancesEnabled2NotFound) Error() string {
	return fmt.Sprintf("[DELETE /instances/{id}/enabled][%d] deleteInstancesEnabled2NotFound ", 404)
}

func (o *DeleteInstancesEnabled2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabled2MethodNotAllowed creates a DeleteInstancesEnabled2MethodNotAllowed with default headers values
func NewDeleteInstancesEnabled2MethodNotAllowed() *DeleteInstancesEnabled2MethodNotAllowed {
	return &DeleteInstancesEnabled2MethodNotAllowed{}
}

/*DeleteInstancesEnabled2MethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type DeleteInstancesEnabled2MethodNotAllowed struct {
}

func (o *DeleteInstancesEnabled2MethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /instances/{id}/enabled][%d] deleteInstancesEnabled2MethodNotAllowed ", 405)
}

func (o *DeleteInstancesEnabled2MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabled2NotAcceptable creates a DeleteInstancesEnabled2NotAcceptable with default headers values
func NewDeleteInstancesEnabled2NotAcceptable() *DeleteInstancesEnabled2NotAcceptable {
	return &DeleteInstancesEnabled2NotAcceptable{}
}

/*DeleteInstancesEnabled2NotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type DeleteInstancesEnabled2NotAcceptable struct {
}

func (o *DeleteInstancesEnabled2NotAcceptable) Error() string {
	return fmt.Sprintf("[DELETE /instances/{id}/enabled][%d] deleteInstancesEnabled2NotAcceptable ", 406)
}

func (o *DeleteInstancesEnabled2NotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabled2Conflict creates a DeleteInstancesEnabled2Conflict with default headers values
func NewDeleteInstancesEnabled2Conflict() *DeleteInstancesEnabled2Conflict {
	return &DeleteInstancesEnabled2Conflict{}
}

/*DeleteInstancesEnabled2Conflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type DeleteInstancesEnabled2Conflict struct {
}

func (o *DeleteInstancesEnabled2Conflict) Error() string {
	return fmt.Sprintf("[DELETE /instances/{id}/enabled][%d] deleteInstancesEnabled2Conflict ", 409)
}

func (o *DeleteInstancesEnabled2Conflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabled2UnsupportedMediaType creates a DeleteInstancesEnabled2UnsupportedMediaType with default headers values
func NewDeleteInstancesEnabled2UnsupportedMediaType() *DeleteInstancesEnabled2UnsupportedMediaType {
	return &DeleteInstancesEnabled2UnsupportedMediaType{}
}

/*DeleteInstancesEnabled2UnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type DeleteInstancesEnabled2UnsupportedMediaType struct {
}

func (o *DeleteInstancesEnabled2UnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /instances/{id}/enabled][%d] deleteInstancesEnabled2UnsupportedMediaType ", 415)
}

func (o *DeleteInstancesEnabled2UnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabled2InternalServerError creates a DeleteInstancesEnabled2InternalServerError with default headers values
func NewDeleteInstancesEnabled2InternalServerError() *DeleteInstancesEnabled2InternalServerError {
	return &DeleteInstancesEnabled2InternalServerError{}
}

/*DeleteInstancesEnabled2InternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type DeleteInstancesEnabled2InternalServerError struct {
}

func (o *DeleteInstancesEnabled2InternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /instances/{id}/enabled][%d] deleteInstancesEnabled2InternalServerError ", 500)
}

func (o *DeleteInstancesEnabled2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
