// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetInstancesEventsDispositionsParams creates a new GetInstancesEventsDispositionsParams object
// with the default values initialized.
func NewGetInstancesEventsDispositionsParams() *GetInstancesEventsDispositionsParams {
	var ()
	return &GetInstancesEventsDispositionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetInstancesEventsDispositionsParamsWithTimeout creates a new GetInstancesEventsDispositionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetInstancesEventsDispositionsParamsWithTimeout(timeout time.Duration) *GetInstancesEventsDispositionsParams {
	var ()
	return &GetInstancesEventsDispositionsParams{

		timeout: timeout,
	}
}

// NewGetInstancesEventsDispositionsParamsWithContext creates a new GetInstancesEventsDispositionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetInstancesEventsDispositionsParamsWithContext(ctx context.Context) *GetInstancesEventsDispositionsParams {
	var ()
	return &GetInstancesEventsDispositionsParams{

		Context: ctx,
	}
}

// NewGetInstancesEventsDispositionsParamsWithHTTPClient creates a new GetInstancesEventsDispositionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetInstancesEventsDispositionsParamsWithHTTPClient(client *http.Client) *GetInstancesEventsDispositionsParams {
	var ()
	return &GetInstancesEventsDispositionsParams{
		HTTPClient: client,
	}
}

/*GetInstancesEventsDispositionsParams contains all the parameters to send to the API endpoint
for the get instances events dispositions operation typically these are written to a http.Request
*/
type GetInstancesEventsDispositionsParams struct {

	/*Authorization
	  The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'

	*/
	Authorization string
	/*From
	  Start time in ISO 8601 format, e.g. '2014-04-14T00:00:00-4:00'. An unspecified time zone defaults to UTC. Defaults to one week prior to the current date.

	*/
	From *string
	/*NextPage
	  The next page cursor, taken from the response header: `elements-next-page-token`

	*/
	NextPage *string
	/*PageSize
	  The page size. Defaults to 200 if not provided. Maximum of 200

	*/
	PageSize *int64
	/*To
	  End time in ISO 8601 format, e.g. '2014-04-14T00:00:00-4:00'. An unspecified time zone defaults to UTC. Defaults to the current date.

	*/
	To *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) WithTimeout(timeout time.Duration) *GetInstancesEventsDispositionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) WithContext(ctx context.Context) *GetInstancesEventsDispositionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) WithHTTPClient(client *http.Client) *GetInstancesEventsDispositionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) WithAuthorization(authorization string) *GetInstancesEventsDispositionsParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithFrom adds the from to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) WithFrom(from *string) *GetInstancesEventsDispositionsParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) SetFrom(from *string) {
	o.From = from
}

// WithNextPage adds the nextPage to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) WithNextPage(nextPage *string) *GetInstancesEventsDispositionsParams {
	o.SetNextPage(nextPage)
	return o
}

// SetNextPage adds the nextPage to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) SetNextPage(nextPage *string) {
	o.NextPage = nextPage
}

// WithPageSize adds the pageSize to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) WithPageSize(pageSize *int64) *GetInstancesEventsDispositionsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithTo adds the to to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) WithTo(to *string) *GetInstancesEventsDispositionsParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the get instances events dispositions params
func (o *GetInstancesEventsDispositionsParams) SetTo(to *string) {
	o.To = to
}

// WriteToRequest writes these params to a swagger request
func (o *GetInstancesEventsDispositionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.From != nil {

		// query param from
		var qrFrom string
		if o.From != nil {
			qrFrom = *o.From
		}
		qFrom := qrFrom
		if qFrom != "" {
			if err := r.SetQueryParam("from", qFrom); err != nil {
				return err
			}
		}

	}

	if o.NextPage != nil {

		// query param nextPage
		var qrNextPage string
		if o.NextPage != nil {
			qrNextPage = *o.NextPage
		}
		qNextPage := qrNextPage
		if qNextPage != "" {
			if err := r.SetQueryParam("nextPage", qNextPage); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int64
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}

	}

	if o.To != nil {

		// query param to
		var qrTo string
		if o.To != nil {
			qrTo = *o.To
		}
		qTo := qrTo
		if qTo != "" {
			if err := r.SetQueryParam("to", qTo); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
