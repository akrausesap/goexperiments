// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/connectorclient/models"
)

// CreateInstanceReader is a Reader for the CreateInstance structure.
type CreateInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateInstanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateInstanceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateInstanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateInstanceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateInstanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewCreateInstanceMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewCreateInstanceNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateInstanceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewCreateInstanceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateInstanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateInstanceOK creates a CreateInstanceOK with default headers values
func NewCreateInstanceOK() *CreateInstanceOK {
	return &CreateInstanceOK{}
}

/*CreateInstanceOK handles this case with default header values.

OK - Everything worked as expected
*/
type CreateInstanceOK struct {
	Payload *models.ElementInstance
}

func (o *CreateInstanceOK) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInstanceOK  %+v", 200, o.Payload)
}

func (o *CreateInstanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ElementInstance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstanceBadRequest creates a CreateInstanceBadRequest with default headers values
func NewCreateInstanceBadRequest() *CreateInstanceBadRequest {
	return &CreateInstanceBadRequest{}
}

/*CreateInstanceBadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type CreateInstanceBadRequest struct {
}

func (o *CreateInstanceBadRequest) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInstanceBadRequest ", 400)
}

func (o *CreateInstanceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInstanceUnauthorized creates a CreateInstanceUnauthorized with default headers values
func NewCreateInstanceUnauthorized() *CreateInstanceUnauthorized {
	return &CreateInstanceUnauthorized{}
}

/*CreateInstanceUnauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type CreateInstanceUnauthorized struct {
}

func (o *CreateInstanceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInstanceUnauthorized ", 401)
}

func (o *CreateInstanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInstanceForbidden creates a CreateInstanceForbidden with default headers values
func NewCreateInstanceForbidden() *CreateInstanceForbidden {
	return &CreateInstanceForbidden{}
}

/*CreateInstanceForbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type CreateInstanceForbidden struct {
}

func (o *CreateInstanceForbidden) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInstanceForbidden ", 403)
}

func (o *CreateInstanceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInstanceNotFound creates a CreateInstanceNotFound with default headers values
func NewCreateInstanceNotFound() *CreateInstanceNotFound {
	return &CreateInstanceNotFound{}
}

/*CreateInstanceNotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type CreateInstanceNotFound struct {
}

func (o *CreateInstanceNotFound) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInstanceNotFound ", 404)
}

func (o *CreateInstanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInstanceMethodNotAllowed creates a CreateInstanceMethodNotAllowed with default headers values
func NewCreateInstanceMethodNotAllowed() *CreateInstanceMethodNotAllowed {
	return &CreateInstanceMethodNotAllowed{}
}

/*CreateInstanceMethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type CreateInstanceMethodNotAllowed struct {
}

func (o *CreateInstanceMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInstanceMethodNotAllowed ", 405)
}

func (o *CreateInstanceMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInstanceNotAcceptable creates a CreateInstanceNotAcceptable with default headers values
func NewCreateInstanceNotAcceptable() *CreateInstanceNotAcceptable {
	return &CreateInstanceNotAcceptable{}
}

/*CreateInstanceNotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type CreateInstanceNotAcceptable struct {
}

func (o *CreateInstanceNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInstanceNotAcceptable ", 406)
}

func (o *CreateInstanceNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInstanceConflict creates a CreateInstanceConflict with default headers values
func NewCreateInstanceConflict() *CreateInstanceConflict {
	return &CreateInstanceConflict{}
}

/*CreateInstanceConflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type CreateInstanceConflict struct {
}

func (o *CreateInstanceConflict) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInstanceConflict ", 409)
}

func (o *CreateInstanceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInstanceUnsupportedMediaType creates a CreateInstanceUnsupportedMediaType with default headers values
func NewCreateInstanceUnsupportedMediaType() *CreateInstanceUnsupportedMediaType {
	return &CreateInstanceUnsupportedMediaType{}
}

/*CreateInstanceUnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type CreateInstanceUnsupportedMediaType struct {
}

func (o *CreateInstanceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInstanceUnsupportedMediaType ", 415)
}

func (o *CreateInstanceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInstanceInternalServerError creates a CreateInstanceInternalServerError with default headers values
func NewCreateInstanceInternalServerError() *CreateInstanceInternalServerError {
	return &CreateInstanceInternalServerError{}
}

/*CreateInstanceInternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type CreateInstanceInternalServerError struct {
}

func (o *CreateInstanceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInstanceInternalServerError ", 500)
}

func (o *CreateInstanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
