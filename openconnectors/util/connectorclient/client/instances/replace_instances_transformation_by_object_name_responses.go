// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/connectorclient/models"
)

// ReplaceInstancesTransformationByObjectNameReader is a Reader for the ReplaceInstancesTransformationByObjectName structure.
type ReplaceInstancesTransformationByObjectNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceInstancesTransformationByObjectNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReplaceInstancesTransformationByObjectNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewReplaceInstancesTransformationByObjectNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewReplaceInstancesTransformationByObjectNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewReplaceInstancesTransformationByObjectNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewReplaceInstancesTransformationByObjectNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewReplaceInstancesTransformationByObjectNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewReplaceInstancesTransformationByObjectNameNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewReplaceInstancesTransformationByObjectNameConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewReplaceInstancesTransformationByObjectNameUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewReplaceInstancesTransformationByObjectNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReplaceInstancesTransformationByObjectNameOK creates a ReplaceInstancesTransformationByObjectNameOK with default headers values
func NewReplaceInstancesTransformationByObjectNameOK() *ReplaceInstancesTransformationByObjectNameOK {
	return &ReplaceInstancesTransformationByObjectNameOK{}
}

/*ReplaceInstancesTransformationByObjectNameOK handles this case with default header values.

OK - Everything worked as expected
*/
type ReplaceInstancesTransformationByObjectNameOK struct {
	Payload *models.Transformation
}

func (o *ReplaceInstancesTransformationByObjectNameOK) Error() string {
	return fmt.Sprintf("[PUT /instances/transformations/{objectName}][%d] replaceInstancesTransformationByObjectNameOK  %+v", 200, o.Payload)
}

func (o *ReplaceInstancesTransformationByObjectNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Transformation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceInstancesTransformationByObjectNameBadRequest creates a ReplaceInstancesTransformationByObjectNameBadRequest with default headers values
func NewReplaceInstancesTransformationByObjectNameBadRequest() *ReplaceInstancesTransformationByObjectNameBadRequest {
	return &ReplaceInstancesTransformationByObjectNameBadRequest{}
}

/*ReplaceInstancesTransformationByObjectNameBadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type ReplaceInstancesTransformationByObjectNameBadRequest struct {
}

func (o *ReplaceInstancesTransformationByObjectNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /instances/transformations/{objectName}][%d] replaceInstancesTransformationByObjectNameBadRequest ", 400)
}

func (o *ReplaceInstancesTransformationByObjectNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesTransformationByObjectNameUnauthorized creates a ReplaceInstancesTransformationByObjectNameUnauthorized with default headers values
func NewReplaceInstancesTransformationByObjectNameUnauthorized() *ReplaceInstancesTransformationByObjectNameUnauthorized {
	return &ReplaceInstancesTransformationByObjectNameUnauthorized{}
}

/*ReplaceInstancesTransformationByObjectNameUnauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type ReplaceInstancesTransformationByObjectNameUnauthorized struct {
}

func (o *ReplaceInstancesTransformationByObjectNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /instances/transformations/{objectName}][%d] replaceInstancesTransformationByObjectNameUnauthorized ", 401)
}

func (o *ReplaceInstancesTransformationByObjectNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesTransformationByObjectNameForbidden creates a ReplaceInstancesTransformationByObjectNameForbidden with default headers values
func NewReplaceInstancesTransformationByObjectNameForbidden() *ReplaceInstancesTransformationByObjectNameForbidden {
	return &ReplaceInstancesTransformationByObjectNameForbidden{}
}

/*ReplaceInstancesTransformationByObjectNameForbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type ReplaceInstancesTransformationByObjectNameForbidden struct {
}

func (o *ReplaceInstancesTransformationByObjectNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /instances/transformations/{objectName}][%d] replaceInstancesTransformationByObjectNameForbidden ", 403)
}

func (o *ReplaceInstancesTransformationByObjectNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesTransformationByObjectNameNotFound creates a ReplaceInstancesTransformationByObjectNameNotFound with default headers values
func NewReplaceInstancesTransformationByObjectNameNotFound() *ReplaceInstancesTransformationByObjectNameNotFound {
	return &ReplaceInstancesTransformationByObjectNameNotFound{}
}

/*ReplaceInstancesTransformationByObjectNameNotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type ReplaceInstancesTransformationByObjectNameNotFound struct {
}

func (o *ReplaceInstancesTransformationByObjectNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /instances/transformations/{objectName}][%d] replaceInstancesTransformationByObjectNameNotFound ", 404)
}

func (o *ReplaceInstancesTransformationByObjectNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesTransformationByObjectNameMethodNotAllowed creates a ReplaceInstancesTransformationByObjectNameMethodNotAllowed with default headers values
func NewReplaceInstancesTransformationByObjectNameMethodNotAllowed() *ReplaceInstancesTransformationByObjectNameMethodNotAllowed {
	return &ReplaceInstancesTransformationByObjectNameMethodNotAllowed{}
}

/*ReplaceInstancesTransformationByObjectNameMethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type ReplaceInstancesTransformationByObjectNameMethodNotAllowed struct {
}

func (o *ReplaceInstancesTransformationByObjectNameMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /instances/transformations/{objectName}][%d] replaceInstancesTransformationByObjectNameMethodNotAllowed ", 405)
}

func (o *ReplaceInstancesTransformationByObjectNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesTransformationByObjectNameNotAcceptable creates a ReplaceInstancesTransformationByObjectNameNotAcceptable with default headers values
func NewReplaceInstancesTransformationByObjectNameNotAcceptable() *ReplaceInstancesTransformationByObjectNameNotAcceptable {
	return &ReplaceInstancesTransformationByObjectNameNotAcceptable{}
}

/*ReplaceInstancesTransformationByObjectNameNotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type ReplaceInstancesTransformationByObjectNameNotAcceptable struct {
}

func (o *ReplaceInstancesTransformationByObjectNameNotAcceptable) Error() string {
	return fmt.Sprintf("[PUT /instances/transformations/{objectName}][%d] replaceInstancesTransformationByObjectNameNotAcceptable ", 406)
}

func (o *ReplaceInstancesTransformationByObjectNameNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesTransformationByObjectNameConflict creates a ReplaceInstancesTransformationByObjectNameConflict with default headers values
func NewReplaceInstancesTransformationByObjectNameConflict() *ReplaceInstancesTransformationByObjectNameConflict {
	return &ReplaceInstancesTransformationByObjectNameConflict{}
}

/*ReplaceInstancesTransformationByObjectNameConflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type ReplaceInstancesTransformationByObjectNameConflict struct {
}

func (o *ReplaceInstancesTransformationByObjectNameConflict) Error() string {
	return fmt.Sprintf("[PUT /instances/transformations/{objectName}][%d] replaceInstancesTransformationByObjectNameConflict ", 409)
}

func (o *ReplaceInstancesTransformationByObjectNameConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesTransformationByObjectNameUnsupportedMediaType creates a ReplaceInstancesTransformationByObjectNameUnsupportedMediaType with default headers values
func NewReplaceInstancesTransformationByObjectNameUnsupportedMediaType() *ReplaceInstancesTransformationByObjectNameUnsupportedMediaType {
	return &ReplaceInstancesTransformationByObjectNameUnsupportedMediaType{}
}

/*ReplaceInstancesTransformationByObjectNameUnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type ReplaceInstancesTransformationByObjectNameUnsupportedMediaType struct {
}

func (o *ReplaceInstancesTransformationByObjectNameUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /instances/transformations/{objectName}][%d] replaceInstancesTransformationByObjectNameUnsupportedMediaType ", 415)
}

func (o *ReplaceInstancesTransformationByObjectNameUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesTransformationByObjectNameInternalServerError creates a ReplaceInstancesTransformationByObjectNameInternalServerError with default headers values
func NewReplaceInstancesTransformationByObjectNameInternalServerError() *ReplaceInstancesTransformationByObjectNameInternalServerError {
	return &ReplaceInstancesTransformationByObjectNameInternalServerError{}
}

/*ReplaceInstancesTransformationByObjectNameInternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type ReplaceInstancesTransformationByObjectNameInternalServerError struct {
}

func (o *ReplaceInstancesTransformationByObjectNameInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /instances/transformations/{objectName}][%d] replaceInstancesTransformationByObjectNameInternalServerError ", 500)
}

func (o *ReplaceInstancesTransformationByObjectNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
