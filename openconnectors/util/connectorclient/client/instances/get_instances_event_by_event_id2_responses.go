// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/connectorclient/models"
)

// GetInstancesEventByEventId2Reader is a Reader for the GetInstancesEventByEventId2 structure.
type GetInstancesEventByEventId2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstancesEventByEventId2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInstancesEventByEventId2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInstancesEventByEventId2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetInstancesEventByEventId2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetInstancesEventByEventId2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInstancesEventByEventId2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetInstancesEventByEventId2MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewGetInstancesEventByEventId2NotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetInstancesEventByEventId2Conflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetInstancesEventByEventId2UnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetInstancesEventByEventId2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInstancesEventByEventId2OK creates a GetInstancesEventByEventId2OK with default headers values
func NewGetInstancesEventByEventId2OK() *GetInstancesEventByEventId2OK {
	return &GetInstancesEventByEventId2OK{}
}

/*GetInstancesEventByEventId2OK handles this case with default header values.

OK - Everything worked as expected
*/
type GetInstancesEventByEventId2OK struct {
	Payload *models.Event
}

func (o *GetInstancesEventByEventId2OK) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/events/{eventId}][%d] getInstancesEventByEventId2OK  %+v", 200, o.Payload)
}

func (o *GetInstancesEventByEventId2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Event)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstancesEventByEventId2BadRequest creates a GetInstancesEventByEventId2BadRequest with default headers values
func NewGetInstancesEventByEventId2BadRequest() *GetInstancesEventByEventId2BadRequest {
	return &GetInstancesEventByEventId2BadRequest{}
}

/*GetInstancesEventByEventId2BadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type GetInstancesEventByEventId2BadRequest struct {
}

func (o *GetInstancesEventByEventId2BadRequest) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/events/{eventId}][%d] getInstancesEventByEventId2BadRequest ", 400)
}

func (o *GetInstancesEventByEventId2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventByEventId2Unauthorized creates a GetInstancesEventByEventId2Unauthorized with default headers values
func NewGetInstancesEventByEventId2Unauthorized() *GetInstancesEventByEventId2Unauthorized {
	return &GetInstancesEventByEventId2Unauthorized{}
}

/*GetInstancesEventByEventId2Unauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type GetInstancesEventByEventId2Unauthorized struct {
}

func (o *GetInstancesEventByEventId2Unauthorized) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/events/{eventId}][%d] getInstancesEventByEventId2Unauthorized ", 401)
}

func (o *GetInstancesEventByEventId2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventByEventId2Forbidden creates a GetInstancesEventByEventId2Forbidden with default headers values
func NewGetInstancesEventByEventId2Forbidden() *GetInstancesEventByEventId2Forbidden {
	return &GetInstancesEventByEventId2Forbidden{}
}

/*GetInstancesEventByEventId2Forbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type GetInstancesEventByEventId2Forbidden struct {
}

func (o *GetInstancesEventByEventId2Forbidden) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/events/{eventId}][%d] getInstancesEventByEventId2Forbidden ", 403)
}

func (o *GetInstancesEventByEventId2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventByEventId2NotFound creates a GetInstancesEventByEventId2NotFound with default headers values
func NewGetInstancesEventByEventId2NotFound() *GetInstancesEventByEventId2NotFound {
	return &GetInstancesEventByEventId2NotFound{}
}

/*GetInstancesEventByEventId2NotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type GetInstancesEventByEventId2NotFound struct {
}

func (o *GetInstancesEventByEventId2NotFound) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/events/{eventId}][%d] getInstancesEventByEventId2NotFound ", 404)
}

func (o *GetInstancesEventByEventId2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventByEventId2MethodNotAllowed creates a GetInstancesEventByEventId2MethodNotAllowed with default headers values
func NewGetInstancesEventByEventId2MethodNotAllowed() *GetInstancesEventByEventId2MethodNotAllowed {
	return &GetInstancesEventByEventId2MethodNotAllowed{}
}

/*GetInstancesEventByEventId2MethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type GetInstancesEventByEventId2MethodNotAllowed struct {
}

func (o *GetInstancesEventByEventId2MethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/events/{eventId}][%d] getInstancesEventByEventId2MethodNotAllowed ", 405)
}

func (o *GetInstancesEventByEventId2MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventByEventId2NotAcceptable creates a GetInstancesEventByEventId2NotAcceptable with default headers values
func NewGetInstancesEventByEventId2NotAcceptable() *GetInstancesEventByEventId2NotAcceptable {
	return &GetInstancesEventByEventId2NotAcceptable{}
}

/*GetInstancesEventByEventId2NotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type GetInstancesEventByEventId2NotAcceptable struct {
}

func (o *GetInstancesEventByEventId2NotAcceptable) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/events/{eventId}][%d] getInstancesEventByEventId2NotAcceptable ", 406)
}

func (o *GetInstancesEventByEventId2NotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventByEventId2Conflict creates a GetInstancesEventByEventId2Conflict with default headers values
func NewGetInstancesEventByEventId2Conflict() *GetInstancesEventByEventId2Conflict {
	return &GetInstancesEventByEventId2Conflict{}
}

/*GetInstancesEventByEventId2Conflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type GetInstancesEventByEventId2Conflict struct {
}

func (o *GetInstancesEventByEventId2Conflict) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/events/{eventId}][%d] getInstancesEventByEventId2Conflict ", 409)
}

func (o *GetInstancesEventByEventId2Conflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventByEventId2UnsupportedMediaType creates a GetInstancesEventByEventId2UnsupportedMediaType with default headers values
func NewGetInstancesEventByEventId2UnsupportedMediaType() *GetInstancesEventByEventId2UnsupportedMediaType {
	return &GetInstancesEventByEventId2UnsupportedMediaType{}
}

/*GetInstancesEventByEventId2UnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type GetInstancesEventByEventId2UnsupportedMediaType struct {
}

func (o *GetInstancesEventByEventId2UnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/events/{eventId}][%d] getInstancesEventByEventId2UnsupportedMediaType ", 415)
}

func (o *GetInstancesEventByEventId2UnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventByEventId2InternalServerError creates a GetInstancesEventByEventId2InternalServerError with default headers values
func NewGetInstancesEventByEventId2InternalServerError() *GetInstancesEventByEventId2InternalServerError {
	return &GetInstancesEventByEventId2InternalServerError{}
}

/*GetInstancesEventByEventId2InternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type GetInstancesEventByEventId2InternalServerError struct {
}

func (o *GetInstancesEventByEventId2InternalServerError) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/events/{eventId}][%d] getInstancesEventByEventId2InternalServerError ", 500)
}

func (o *GetInstancesEventByEventId2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
