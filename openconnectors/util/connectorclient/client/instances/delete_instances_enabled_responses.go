// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteInstancesEnabledReader is a Reader for the DeleteInstancesEnabled structure.
type DeleteInstancesEnabledReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteInstancesEnabledReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteInstancesEnabledOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteInstancesEnabledBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteInstancesEnabledUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteInstancesEnabledForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteInstancesEnabledNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDeleteInstancesEnabledMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewDeleteInstancesEnabledNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteInstancesEnabledConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeleteInstancesEnabledUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteInstancesEnabledInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteInstancesEnabledOK creates a DeleteInstancesEnabledOK with default headers values
func NewDeleteInstancesEnabledOK() *DeleteInstancesEnabledOK {
	return &DeleteInstancesEnabledOK{}
}

/*DeleteInstancesEnabledOK handles this case with default header values.

OK - Everything worked as expected
*/
type DeleteInstancesEnabledOK struct {
}

func (o *DeleteInstancesEnabledOK) Error() string {
	return fmt.Sprintf("[DELETE /instances/enabled][%d] deleteInstancesEnabledOK ", 200)
}

func (o *DeleteInstancesEnabledOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabledBadRequest creates a DeleteInstancesEnabledBadRequest with default headers values
func NewDeleteInstancesEnabledBadRequest() *DeleteInstancesEnabledBadRequest {
	return &DeleteInstancesEnabledBadRequest{}
}

/*DeleteInstancesEnabledBadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type DeleteInstancesEnabledBadRequest struct {
}

func (o *DeleteInstancesEnabledBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /instances/enabled][%d] deleteInstancesEnabledBadRequest ", 400)
}

func (o *DeleteInstancesEnabledBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabledUnauthorized creates a DeleteInstancesEnabledUnauthorized with default headers values
func NewDeleteInstancesEnabledUnauthorized() *DeleteInstancesEnabledUnauthorized {
	return &DeleteInstancesEnabledUnauthorized{}
}

/*DeleteInstancesEnabledUnauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type DeleteInstancesEnabledUnauthorized struct {
}

func (o *DeleteInstancesEnabledUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /instances/enabled][%d] deleteInstancesEnabledUnauthorized ", 401)
}

func (o *DeleteInstancesEnabledUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabledForbidden creates a DeleteInstancesEnabledForbidden with default headers values
func NewDeleteInstancesEnabledForbidden() *DeleteInstancesEnabledForbidden {
	return &DeleteInstancesEnabledForbidden{}
}

/*DeleteInstancesEnabledForbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type DeleteInstancesEnabledForbidden struct {
}

func (o *DeleteInstancesEnabledForbidden) Error() string {
	return fmt.Sprintf("[DELETE /instances/enabled][%d] deleteInstancesEnabledForbidden ", 403)
}

func (o *DeleteInstancesEnabledForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabledNotFound creates a DeleteInstancesEnabledNotFound with default headers values
func NewDeleteInstancesEnabledNotFound() *DeleteInstancesEnabledNotFound {
	return &DeleteInstancesEnabledNotFound{}
}

/*DeleteInstancesEnabledNotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type DeleteInstancesEnabledNotFound struct {
}

func (o *DeleteInstancesEnabledNotFound) Error() string {
	return fmt.Sprintf("[DELETE /instances/enabled][%d] deleteInstancesEnabledNotFound ", 404)
}

func (o *DeleteInstancesEnabledNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabledMethodNotAllowed creates a DeleteInstancesEnabledMethodNotAllowed with default headers values
func NewDeleteInstancesEnabledMethodNotAllowed() *DeleteInstancesEnabledMethodNotAllowed {
	return &DeleteInstancesEnabledMethodNotAllowed{}
}

/*DeleteInstancesEnabledMethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type DeleteInstancesEnabledMethodNotAllowed struct {
}

func (o *DeleteInstancesEnabledMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /instances/enabled][%d] deleteInstancesEnabledMethodNotAllowed ", 405)
}

func (o *DeleteInstancesEnabledMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabledNotAcceptable creates a DeleteInstancesEnabledNotAcceptable with default headers values
func NewDeleteInstancesEnabledNotAcceptable() *DeleteInstancesEnabledNotAcceptable {
	return &DeleteInstancesEnabledNotAcceptable{}
}

/*DeleteInstancesEnabledNotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type DeleteInstancesEnabledNotAcceptable struct {
}

func (o *DeleteInstancesEnabledNotAcceptable) Error() string {
	return fmt.Sprintf("[DELETE /instances/enabled][%d] deleteInstancesEnabledNotAcceptable ", 406)
}

func (o *DeleteInstancesEnabledNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabledConflict creates a DeleteInstancesEnabledConflict with default headers values
func NewDeleteInstancesEnabledConflict() *DeleteInstancesEnabledConflict {
	return &DeleteInstancesEnabledConflict{}
}

/*DeleteInstancesEnabledConflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type DeleteInstancesEnabledConflict struct {
}

func (o *DeleteInstancesEnabledConflict) Error() string {
	return fmt.Sprintf("[DELETE /instances/enabled][%d] deleteInstancesEnabledConflict ", 409)
}

func (o *DeleteInstancesEnabledConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabledUnsupportedMediaType creates a DeleteInstancesEnabledUnsupportedMediaType with default headers values
func NewDeleteInstancesEnabledUnsupportedMediaType() *DeleteInstancesEnabledUnsupportedMediaType {
	return &DeleteInstancesEnabledUnsupportedMediaType{}
}

/*DeleteInstancesEnabledUnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type DeleteInstancesEnabledUnsupportedMediaType struct {
}

func (o *DeleteInstancesEnabledUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /instances/enabled][%d] deleteInstancesEnabledUnsupportedMediaType ", 415)
}

func (o *DeleteInstancesEnabledUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesEnabledInternalServerError creates a DeleteInstancesEnabledInternalServerError with default headers values
func NewDeleteInstancesEnabledInternalServerError() *DeleteInstancesEnabledInternalServerError {
	return &DeleteInstancesEnabledInternalServerError{}
}

/*DeleteInstancesEnabledInternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type DeleteInstancesEnabledInternalServerError struct {
}

func (o *DeleteInstancesEnabledInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /instances/enabled][%d] deleteInstancesEnabledInternalServerError ", 500)
}

func (o *DeleteInstancesEnabledInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
