// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/connectorclient/models"
)

// GetInstancesEventsAnalyticsReader is a Reader for the GetInstancesEventsAnalytics structure.
type GetInstancesEventsAnalyticsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstancesEventsAnalyticsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInstancesEventsAnalyticsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInstancesEventsAnalyticsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetInstancesEventsAnalyticsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetInstancesEventsAnalyticsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInstancesEventsAnalyticsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetInstancesEventsAnalyticsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewGetInstancesEventsAnalyticsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetInstancesEventsAnalyticsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetInstancesEventsAnalyticsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetInstancesEventsAnalyticsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInstancesEventsAnalyticsOK creates a GetInstancesEventsAnalyticsOK with default headers values
func NewGetInstancesEventsAnalyticsOK() *GetInstancesEventsAnalyticsOK {
	return &GetInstancesEventsAnalyticsOK{}
}

/*GetInstancesEventsAnalyticsOK handles this case with default header values.

OK - Everything worked as expected
*/
type GetInstancesEventsAnalyticsOK struct {
	Payload []*models.AnalyticsEntry
}

func (o *GetInstancesEventsAnalyticsOK) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics][%d] getInstancesEventsAnalyticsOK  %+v", 200, o.Payload)
}

func (o *GetInstancesEventsAnalyticsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstancesEventsAnalyticsBadRequest creates a GetInstancesEventsAnalyticsBadRequest with default headers values
func NewGetInstancesEventsAnalyticsBadRequest() *GetInstancesEventsAnalyticsBadRequest {
	return &GetInstancesEventsAnalyticsBadRequest{}
}

/*GetInstancesEventsAnalyticsBadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type GetInstancesEventsAnalyticsBadRequest struct {
}

func (o *GetInstancesEventsAnalyticsBadRequest) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics][%d] getInstancesEventsAnalyticsBadRequest ", 400)
}

func (o *GetInstancesEventsAnalyticsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsUnauthorized creates a GetInstancesEventsAnalyticsUnauthorized with default headers values
func NewGetInstancesEventsAnalyticsUnauthorized() *GetInstancesEventsAnalyticsUnauthorized {
	return &GetInstancesEventsAnalyticsUnauthorized{}
}

/*GetInstancesEventsAnalyticsUnauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type GetInstancesEventsAnalyticsUnauthorized struct {
}

func (o *GetInstancesEventsAnalyticsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics][%d] getInstancesEventsAnalyticsUnauthorized ", 401)
}

func (o *GetInstancesEventsAnalyticsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsForbidden creates a GetInstancesEventsAnalyticsForbidden with default headers values
func NewGetInstancesEventsAnalyticsForbidden() *GetInstancesEventsAnalyticsForbidden {
	return &GetInstancesEventsAnalyticsForbidden{}
}

/*GetInstancesEventsAnalyticsForbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type GetInstancesEventsAnalyticsForbidden struct {
}

func (o *GetInstancesEventsAnalyticsForbidden) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics][%d] getInstancesEventsAnalyticsForbidden ", 403)
}

func (o *GetInstancesEventsAnalyticsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsNotFound creates a GetInstancesEventsAnalyticsNotFound with default headers values
func NewGetInstancesEventsAnalyticsNotFound() *GetInstancesEventsAnalyticsNotFound {
	return &GetInstancesEventsAnalyticsNotFound{}
}

/*GetInstancesEventsAnalyticsNotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type GetInstancesEventsAnalyticsNotFound struct {
}

func (o *GetInstancesEventsAnalyticsNotFound) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics][%d] getInstancesEventsAnalyticsNotFound ", 404)
}

func (o *GetInstancesEventsAnalyticsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsMethodNotAllowed creates a GetInstancesEventsAnalyticsMethodNotAllowed with default headers values
func NewGetInstancesEventsAnalyticsMethodNotAllowed() *GetInstancesEventsAnalyticsMethodNotAllowed {
	return &GetInstancesEventsAnalyticsMethodNotAllowed{}
}

/*GetInstancesEventsAnalyticsMethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type GetInstancesEventsAnalyticsMethodNotAllowed struct {
}

func (o *GetInstancesEventsAnalyticsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics][%d] getInstancesEventsAnalyticsMethodNotAllowed ", 405)
}

func (o *GetInstancesEventsAnalyticsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsNotAcceptable creates a GetInstancesEventsAnalyticsNotAcceptable with default headers values
func NewGetInstancesEventsAnalyticsNotAcceptable() *GetInstancesEventsAnalyticsNotAcceptable {
	return &GetInstancesEventsAnalyticsNotAcceptable{}
}

/*GetInstancesEventsAnalyticsNotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type GetInstancesEventsAnalyticsNotAcceptable struct {
}

func (o *GetInstancesEventsAnalyticsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics][%d] getInstancesEventsAnalyticsNotAcceptable ", 406)
}

func (o *GetInstancesEventsAnalyticsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsConflict creates a GetInstancesEventsAnalyticsConflict with default headers values
func NewGetInstancesEventsAnalyticsConflict() *GetInstancesEventsAnalyticsConflict {
	return &GetInstancesEventsAnalyticsConflict{}
}

/*GetInstancesEventsAnalyticsConflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type GetInstancesEventsAnalyticsConflict struct {
}

func (o *GetInstancesEventsAnalyticsConflict) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics][%d] getInstancesEventsAnalyticsConflict ", 409)
}

func (o *GetInstancesEventsAnalyticsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsUnsupportedMediaType creates a GetInstancesEventsAnalyticsUnsupportedMediaType with default headers values
func NewGetInstancesEventsAnalyticsUnsupportedMediaType() *GetInstancesEventsAnalyticsUnsupportedMediaType {
	return &GetInstancesEventsAnalyticsUnsupportedMediaType{}
}

/*GetInstancesEventsAnalyticsUnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type GetInstancesEventsAnalyticsUnsupportedMediaType struct {
}

func (o *GetInstancesEventsAnalyticsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics][%d] getInstancesEventsAnalyticsUnsupportedMediaType ", 415)
}

func (o *GetInstancesEventsAnalyticsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsInternalServerError creates a GetInstancesEventsAnalyticsInternalServerError with default headers values
func NewGetInstancesEventsAnalyticsInternalServerError() *GetInstancesEventsAnalyticsInternalServerError {
	return &GetInstancesEventsAnalyticsInternalServerError{}
}

/*GetInstancesEventsAnalyticsInternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type GetInstancesEventsAnalyticsInternalServerError struct {
}

func (o *GetInstancesEventsAnalyticsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics][%d] getInstancesEventsAnalyticsInternalServerError ", 500)
}

func (o *GetInstancesEventsAnalyticsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
