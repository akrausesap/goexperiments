// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/connectorclient/models"
)

// GetInstancesEventsAnalyticsAccountsReader is a Reader for the GetInstancesEventsAnalyticsAccounts structure.
type GetInstancesEventsAnalyticsAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstancesEventsAnalyticsAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInstancesEventsAnalyticsAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInstancesEventsAnalyticsAccountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetInstancesEventsAnalyticsAccountsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetInstancesEventsAnalyticsAccountsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInstancesEventsAnalyticsAccountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetInstancesEventsAnalyticsAccountsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewGetInstancesEventsAnalyticsAccountsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetInstancesEventsAnalyticsAccountsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetInstancesEventsAnalyticsAccountsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetInstancesEventsAnalyticsAccountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInstancesEventsAnalyticsAccountsOK creates a GetInstancesEventsAnalyticsAccountsOK with default headers values
func NewGetInstancesEventsAnalyticsAccountsOK() *GetInstancesEventsAnalyticsAccountsOK {
	return &GetInstancesEventsAnalyticsAccountsOK{}
}

/*GetInstancesEventsAnalyticsAccountsOK handles this case with default header values.

OK - Everything worked as expected
*/
type GetInstancesEventsAnalyticsAccountsOK struct {
	Payload []*models.AccountAnalyticsEntry
}

func (o *GetInstancesEventsAnalyticsAccountsOK) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics/accounts][%d] getInstancesEventsAnalyticsAccountsOK  %+v", 200, o.Payload)
}

func (o *GetInstancesEventsAnalyticsAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstancesEventsAnalyticsAccountsBadRequest creates a GetInstancesEventsAnalyticsAccountsBadRequest with default headers values
func NewGetInstancesEventsAnalyticsAccountsBadRequest() *GetInstancesEventsAnalyticsAccountsBadRequest {
	return &GetInstancesEventsAnalyticsAccountsBadRequest{}
}

/*GetInstancesEventsAnalyticsAccountsBadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type GetInstancesEventsAnalyticsAccountsBadRequest struct {
}

func (o *GetInstancesEventsAnalyticsAccountsBadRequest) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics/accounts][%d] getInstancesEventsAnalyticsAccountsBadRequest ", 400)
}

func (o *GetInstancesEventsAnalyticsAccountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsAccountsUnauthorized creates a GetInstancesEventsAnalyticsAccountsUnauthorized with default headers values
func NewGetInstancesEventsAnalyticsAccountsUnauthorized() *GetInstancesEventsAnalyticsAccountsUnauthorized {
	return &GetInstancesEventsAnalyticsAccountsUnauthorized{}
}

/*GetInstancesEventsAnalyticsAccountsUnauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type GetInstancesEventsAnalyticsAccountsUnauthorized struct {
}

func (o *GetInstancesEventsAnalyticsAccountsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics/accounts][%d] getInstancesEventsAnalyticsAccountsUnauthorized ", 401)
}

func (o *GetInstancesEventsAnalyticsAccountsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsAccountsForbidden creates a GetInstancesEventsAnalyticsAccountsForbidden with default headers values
func NewGetInstancesEventsAnalyticsAccountsForbidden() *GetInstancesEventsAnalyticsAccountsForbidden {
	return &GetInstancesEventsAnalyticsAccountsForbidden{}
}

/*GetInstancesEventsAnalyticsAccountsForbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type GetInstancesEventsAnalyticsAccountsForbidden struct {
}

func (o *GetInstancesEventsAnalyticsAccountsForbidden) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics/accounts][%d] getInstancesEventsAnalyticsAccountsForbidden ", 403)
}

func (o *GetInstancesEventsAnalyticsAccountsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsAccountsNotFound creates a GetInstancesEventsAnalyticsAccountsNotFound with default headers values
func NewGetInstancesEventsAnalyticsAccountsNotFound() *GetInstancesEventsAnalyticsAccountsNotFound {
	return &GetInstancesEventsAnalyticsAccountsNotFound{}
}

/*GetInstancesEventsAnalyticsAccountsNotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type GetInstancesEventsAnalyticsAccountsNotFound struct {
}

func (o *GetInstancesEventsAnalyticsAccountsNotFound) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics/accounts][%d] getInstancesEventsAnalyticsAccountsNotFound ", 404)
}

func (o *GetInstancesEventsAnalyticsAccountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsAccountsMethodNotAllowed creates a GetInstancesEventsAnalyticsAccountsMethodNotAllowed with default headers values
func NewGetInstancesEventsAnalyticsAccountsMethodNotAllowed() *GetInstancesEventsAnalyticsAccountsMethodNotAllowed {
	return &GetInstancesEventsAnalyticsAccountsMethodNotAllowed{}
}

/*GetInstancesEventsAnalyticsAccountsMethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type GetInstancesEventsAnalyticsAccountsMethodNotAllowed struct {
}

func (o *GetInstancesEventsAnalyticsAccountsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics/accounts][%d] getInstancesEventsAnalyticsAccountsMethodNotAllowed ", 405)
}

func (o *GetInstancesEventsAnalyticsAccountsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsAccountsNotAcceptable creates a GetInstancesEventsAnalyticsAccountsNotAcceptable with default headers values
func NewGetInstancesEventsAnalyticsAccountsNotAcceptable() *GetInstancesEventsAnalyticsAccountsNotAcceptable {
	return &GetInstancesEventsAnalyticsAccountsNotAcceptable{}
}

/*GetInstancesEventsAnalyticsAccountsNotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type GetInstancesEventsAnalyticsAccountsNotAcceptable struct {
}

func (o *GetInstancesEventsAnalyticsAccountsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics/accounts][%d] getInstancesEventsAnalyticsAccountsNotAcceptable ", 406)
}

func (o *GetInstancesEventsAnalyticsAccountsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsAccountsConflict creates a GetInstancesEventsAnalyticsAccountsConflict with default headers values
func NewGetInstancesEventsAnalyticsAccountsConflict() *GetInstancesEventsAnalyticsAccountsConflict {
	return &GetInstancesEventsAnalyticsAccountsConflict{}
}

/*GetInstancesEventsAnalyticsAccountsConflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type GetInstancesEventsAnalyticsAccountsConflict struct {
}

func (o *GetInstancesEventsAnalyticsAccountsConflict) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics/accounts][%d] getInstancesEventsAnalyticsAccountsConflict ", 409)
}

func (o *GetInstancesEventsAnalyticsAccountsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsAccountsUnsupportedMediaType creates a GetInstancesEventsAnalyticsAccountsUnsupportedMediaType with default headers values
func NewGetInstancesEventsAnalyticsAccountsUnsupportedMediaType() *GetInstancesEventsAnalyticsAccountsUnsupportedMediaType {
	return &GetInstancesEventsAnalyticsAccountsUnsupportedMediaType{}
}

/*GetInstancesEventsAnalyticsAccountsUnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type GetInstancesEventsAnalyticsAccountsUnsupportedMediaType struct {
}

func (o *GetInstancesEventsAnalyticsAccountsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics/accounts][%d] getInstancesEventsAnalyticsAccountsUnsupportedMediaType ", 415)
}

func (o *GetInstancesEventsAnalyticsAccountsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstancesEventsAnalyticsAccountsInternalServerError creates a GetInstancesEventsAnalyticsAccountsInternalServerError with default headers values
func NewGetInstancesEventsAnalyticsAccountsInternalServerError() *GetInstancesEventsAnalyticsAccountsInternalServerError {
	return &GetInstancesEventsAnalyticsAccountsInternalServerError{}
}

/*GetInstancesEventsAnalyticsAccountsInternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type GetInstancesEventsAnalyticsAccountsInternalServerError struct {
}

func (o *GetInstancesEventsAnalyticsAccountsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /instances/events/analytics/accounts][%d] getInstancesEventsAnalyticsAccountsInternalServerError ", 500)
}

func (o *GetInstancesEventsAnalyticsAccountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
