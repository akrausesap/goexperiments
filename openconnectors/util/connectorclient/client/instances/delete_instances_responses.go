// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteInstancesReader is a Reader for the DeleteInstances structure.
type DeleteInstancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteInstancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteInstancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteInstancesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteInstancesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteInstancesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteInstancesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDeleteInstancesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewDeleteInstancesNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteInstancesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeleteInstancesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteInstancesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteInstancesOK creates a DeleteInstancesOK with default headers values
func NewDeleteInstancesOK() *DeleteInstancesOK {
	return &DeleteInstancesOK{}
}

/*DeleteInstancesOK handles this case with default header values.

OK - Everything worked as expected
*/
type DeleteInstancesOK struct {
}

func (o *DeleteInstancesOK) Error() string {
	return fmt.Sprintf("[DELETE /instances][%d] deleteInstancesOK ", 200)
}

func (o *DeleteInstancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesBadRequest creates a DeleteInstancesBadRequest with default headers values
func NewDeleteInstancesBadRequest() *DeleteInstancesBadRequest {
	return &DeleteInstancesBadRequest{}
}

/*DeleteInstancesBadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type DeleteInstancesBadRequest struct {
}

func (o *DeleteInstancesBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /instances][%d] deleteInstancesBadRequest ", 400)
}

func (o *DeleteInstancesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesUnauthorized creates a DeleteInstancesUnauthorized with default headers values
func NewDeleteInstancesUnauthorized() *DeleteInstancesUnauthorized {
	return &DeleteInstancesUnauthorized{}
}

/*DeleteInstancesUnauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type DeleteInstancesUnauthorized struct {
}

func (o *DeleteInstancesUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /instances][%d] deleteInstancesUnauthorized ", 401)
}

func (o *DeleteInstancesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesForbidden creates a DeleteInstancesForbidden with default headers values
func NewDeleteInstancesForbidden() *DeleteInstancesForbidden {
	return &DeleteInstancesForbidden{}
}

/*DeleteInstancesForbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type DeleteInstancesForbidden struct {
}

func (o *DeleteInstancesForbidden) Error() string {
	return fmt.Sprintf("[DELETE /instances][%d] deleteInstancesForbidden ", 403)
}

func (o *DeleteInstancesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesNotFound creates a DeleteInstancesNotFound with default headers values
func NewDeleteInstancesNotFound() *DeleteInstancesNotFound {
	return &DeleteInstancesNotFound{}
}

/*DeleteInstancesNotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type DeleteInstancesNotFound struct {
}

func (o *DeleteInstancesNotFound) Error() string {
	return fmt.Sprintf("[DELETE /instances][%d] deleteInstancesNotFound ", 404)
}

func (o *DeleteInstancesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesMethodNotAllowed creates a DeleteInstancesMethodNotAllowed with default headers values
func NewDeleteInstancesMethodNotAllowed() *DeleteInstancesMethodNotAllowed {
	return &DeleteInstancesMethodNotAllowed{}
}

/*DeleteInstancesMethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type DeleteInstancesMethodNotAllowed struct {
}

func (o *DeleteInstancesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /instances][%d] deleteInstancesMethodNotAllowed ", 405)
}

func (o *DeleteInstancesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesNotAcceptable creates a DeleteInstancesNotAcceptable with default headers values
func NewDeleteInstancesNotAcceptable() *DeleteInstancesNotAcceptable {
	return &DeleteInstancesNotAcceptable{}
}

/*DeleteInstancesNotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type DeleteInstancesNotAcceptable struct {
}

func (o *DeleteInstancesNotAcceptable) Error() string {
	return fmt.Sprintf("[DELETE /instances][%d] deleteInstancesNotAcceptable ", 406)
}

func (o *DeleteInstancesNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesConflict creates a DeleteInstancesConflict with default headers values
func NewDeleteInstancesConflict() *DeleteInstancesConflict {
	return &DeleteInstancesConflict{}
}

/*DeleteInstancesConflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type DeleteInstancesConflict struct {
}

func (o *DeleteInstancesConflict) Error() string {
	return fmt.Sprintf("[DELETE /instances][%d] deleteInstancesConflict ", 409)
}

func (o *DeleteInstancesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesUnsupportedMediaType creates a DeleteInstancesUnsupportedMediaType with default headers values
func NewDeleteInstancesUnsupportedMediaType() *DeleteInstancesUnsupportedMediaType {
	return &DeleteInstancesUnsupportedMediaType{}
}

/*DeleteInstancesUnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type DeleteInstancesUnsupportedMediaType struct {
}

func (o *DeleteInstancesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /instances][%d] deleteInstancesUnsupportedMediaType ", 415)
}

func (o *DeleteInstancesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteInstancesInternalServerError creates a DeleteInstancesInternalServerError with default headers values
func NewDeleteInstancesInternalServerError() *DeleteInstancesInternalServerError {
	return &DeleteInstancesInternalServerError{}
}

/*DeleteInstancesInternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type DeleteInstancesInternalServerError struct {
}

func (o *DeleteInstancesInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /instances][%d] deleteInstancesInternalServerError ", 500)
}

func (o *DeleteInstancesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
