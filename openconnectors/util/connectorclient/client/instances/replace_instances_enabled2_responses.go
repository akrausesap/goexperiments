// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReplaceInstancesEnabled2Reader is a Reader for the ReplaceInstancesEnabled2 structure.
type ReplaceInstancesEnabled2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceInstancesEnabled2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReplaceInstancesEnabled2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewReplaceInstancesEnabled2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewReplaceInstancesEnabled2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewReplaceInstancesEnabled2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewReplaceInstancesEnabled2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewReplaceInstancesEnabled2MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewReplaceInstancesEnabled2NotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewReplaceInstancesEnabled2Conflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewReplaceInstancesEnabled2UnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewReplaceInstancesEnabled2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReplaceInstancesEnabled2OK creates a ReplaceInstancesEnabled2OK with default headers values
func NewReplaceInstancesEnabled2OK() *ReplaceInstancesEnabled2OK {
	return &ReplaceInstancesEnabled2OK{}
}

/*ReplaceInstancesEnabled2OK handles this case with default header values.

OK - Everything worked as expected
*/
type ReplaceInstancesEnabled2OK struct {
}

func (o *ReplaceInstancesEnabled2OK) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/enabled][%d] replaceInstancesEnabled2OK ", 200)
}

func (o *ReplaceInstancesEnabled2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesEnabled2BadRequest creates a ReplaceInstancesEnabled2BadRequest with default headers values
func NewReplaceInstancesEnabled2BadRequest() *ReplaceInstancesEnabled2BadRequest {
	return &ReplaceInstancesEnabled2BadRequest{}
}

/*ReplaceInstancesEnabled2BadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type ReplaceInstancesEnabled2BadRequest struct {
}

func (o *ReplaceInstancesEnabled2BadRequest) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/enabled][%d] replaceInstancesEnabled2BadRequest ", 400)
}

func (o *ReplaceInstancesEnabled2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesEnabled2Unauthorized creates a ReplaceInstancesEnabled2Unauthorized with default headers values
func NewReplaceInstancesEnabled2Unauthorized() *ReplaceInstancesEnabled2Unauthorized {
	return &ReplaceInstancesEnabled2Unauthorized{}
}

/*ReplaceInstancesEnabled2Unauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type ReplaceInstancesEnabled2Unauthorized struct {
}

func (o *ReplaceInstancesEnabled2Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/enabled][%d] replaceInstancesEnabled2Unauthorized ", 401)
}

func (o *ReplaceInstancesEnabled2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesEnabled2Forbidden creates a ReplaceInstancesEnabled2Forbidden with default headers values
func NewReplaceInstancesEnabled2Forbidden() *ReplaceInstancesEnabled2Forbidden {
	return &ReplaceInstancesEnabled2Forbidden{}
}

/*ReplaceInstancesEnabled2Forbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type ReplaceInstancesEnabled2Forbidden struct {
}

func (o *ReplaceInstancesEnabled2Forbidden) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/enabled][%d] replaceInstancesEnabled2Forbidden ", 403)
}

func (o *ReplaceInstancesEnabled2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesEnabled2NotFound creates a ReplaceInstancesEnabled2NotFound with default headers values
func NewReplaceInstancesEnabled2NotFound() *ReplaceInstancesEnabled2NotFound {
	return &ReplaceInstancesEnabled2NotFound{}
}

/*ReplaceInstancesEnabled2NotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type ReplaceInstancesEnabled2NotFound struct {
}

func (o *ReplaceInstancesEnabled2NotFound) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/enabled][%d] replaceInstancesEnabled2NotFound ", 404)
}

func (o *ReplaceInstancesEnabled2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesEnabled2MethodNotAllowed creates a ReplaceInstancesEnabled2MethodNotAllowed with default headers values
func NewReplaceInstancesEnabled2MethodNotAllowed() *ReplaceInstancesEnabled2MethodNotAllowed {
	return &ReplaceInstancesEnabled2MethodNotAllowed{}
}

/*ReplaceInstancesEnabled2MethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type ReplaceInstancesEnabled2MethodNotAllowed struct {
}

func (o *ReplaceInstancesEnabled2MethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/enabled][%d] replaceInstancesEnabled2MethodNotAllowed ", 405)
}

func (o *ReplaceInstancesEnabled2MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesEnabled2NotAcceptable creates a ReplaceInstancesEnabled2NotAcceptable with default headers values
func NewReplaceInstancesEnabled2NotAcceptable() *ReplaceInstancesEnabled2NotAcceptable {
	return &ReplaceInstancesEnabled2NotAcceptable{}
}

/*ReplaceInstancesEnabled2NotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type ReplaceInstancesEnabled2NotAcceptable struct {
}

func (o *ReplaceInstancesEnabled2NotAcceptable) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/enabled][%d] replaceInstancesEnabled2NotAcceptable ", 406)
}

func (o *ReplaceInstancesEnabled2NotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesEnabled2Conflict creates a ReplaceInstancesEnabled2Conflict with default headers values
func NewReplaceInstancesEnabled2Conflict() *ReplaceInstancesEnabled2Conflict {
	return &ReplaceInstancesEnabled2Conflict{}
}

/*ReplaceInstancesEnabled2Conflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type ReplaceInstancesEnabled2Conflict struct {
}

func (o *ReplaceInstancesEnabled2Conflict) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/enabled][%d] replaceInstancesEnabled2Conflict ", 409)
}

func (o *ReplaceInstancesEnabled2Conflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesEnabled2UnsupportedMediaType creates a ReplaceInstancesEnabled2UnsupportedMediaType with default headers values
func NewReplaceInstancesEnabled2UnsupportedMediaType() *ReplaceInstancesEnabled2UnsupportedMediaType {
	return &ReplaceInstancesEnabled2UnsupportedMediaType{}
}

/*ReplaceInstancesEnabled2UnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type ReplaceInstancesEnabled2UnsupportedMediaType struct {
}

func (o *ReplaceInstancesEnabled2UnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/enabled][%d] replaceInstancesEnabled2UnsupportedMediaType ", 415)
}

func (o *ReplaceInstancesEnabled2UnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesEnabled2InternalServerError creates a ReplaceInstancesEnabled2InternalServerError with default headers values
func NewReplaceInstancesEnabled2InternalServerError() *ReplaceInstancesEnabled2InternalServerError {
	return &ReplaceInstancesEnabled2InternalServerError{}
}

/*ReplaceInstancesEnabled2InternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type ReplaceInstancesEnabled2InternalServerError struct {
}

func (o *ReplaceInstancesEnabled2InternalServerError) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/enabled][%d] replaceInstancesEnabled2InternalServerError ", 500)
}

func (o *ReplaceInstancesEnabled2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
