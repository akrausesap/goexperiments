// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/connectorclient/models"
)

// ReplaceInstancesObjectsObjectNameDefinitionsReader is a Reader for the ReplaceInstancesObjectsObjectNameDefinitions structure.
type ReplaceInstancesObjectsObjectNameDefinitionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceInstancesObjectsObjectNameDefinitionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReplaceInstancesObjectsObjectNameDefinitionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewReplaceInstancesObjectsObjectNameDefinitionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewReplaceInstancesObjectsObjectNameDefinitionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewReplaceInstancesObjectsObjectNameDefinitionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewReplaceInstancesObjectsObjectNameDefinitionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewReplaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewReplaceInstancesObjectsObjectNameDefinitionsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewReplaceInstancesObjectsObjectNameDefinitionsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewReplaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewReplaceInstancesObjectsObjectNameDefinitionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReplaceInstancesObjectsObjectNameDefinitionsOK creates a ReplaceInstancesObjectsObjectNameDefinitionsOK with default headers values
func NewReplaceInstancesObjectsObjectNameDefinitionsOK() *ReplaceInstancesObjectsObjectNameDefinitionsOK {
	return &ReplaceInstancesObjectsObjectNameDefinitionsOK{}
}

/*ReplaceInstancesObjectsObjectNameDefinitionsOK handles this case with default header values.

OK - Everything worked as expected
*/
type ReplaceInstancesObjectsObjectNameDefinitionsOK struct {
	Payload *models.Definition
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsOK) Error() string {
	return fmt.Sprintf("[PUT /instances/objects/{objectName}/definitions][%d] replaceInstancesObjectsObjectNameDefinitionsOK  %+v", 200, o.Payload)
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Definition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceInstancesObjectsObjectNameDefinitionsBadRequest creates a ReplaceInstancesObjectsObjectNameDefinitionsBadRequest with default headers values
func NewReplaceInstancesObjectsObjectNameDefinitionsBadRequest() *ReplaceInstancesObjectsObjectNameDefinitionsBadRequest {
	return &ReplaceInstancesObjectsObjectNameDefinitionsBadRequest{}
}

/*ReplaceInstancesObjectsObjectNameDefinitionsBadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type ReplaceInstancesObjectsObjectNameDefinitionsBadRequest struct {
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /instances/objects/{objectName}/definitions][%d] replaceInstancesObjectsObjectNameDefinitionsBadRequest ", 400)
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesObjectsObjectNameDefinitionsUnauthorized creates a ReplaceInstancesObjectsObjectNameDefinitionsUnauthorized with default headers values
func NewReplaceInstancesObjectsObjectNameDefinitionsUnauthorized() *ReplaceInstancesObjectsObjectNameDefinitionsUnauthorized {
	return &ReplaceInstancesObjectsObjectNameDefinitionsUnauthorized{}
}

/*ReplaceInstancesObjectsObjectNameDefinitionsUnauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type ReplaceInstancesObjectsObjectNameDefinitionsUnauthorized struct {
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /instances/objects/{objectName}/definitions][%d] replaceInstancesObjectsObjectNameDefinitionsUnauthorized ", 401)
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesObjectsObjectNameDefinitionsForbidden creates a ReplaceInstancesObjectsObjectNameDefinitionsForbidden with default headers values
func NewReplaceInstancesObjectsObjectNameDefinitionsForbidden() *ReplaceInstancesObjectsObjectNameDefinitionsForbidden {
	return &ReplaceInstancesObjectsObjectNameDefinitionsForbidden{}
}

/*ReplaceInstancesObjectsObjectNameDefinitionsForbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type ReplaceInstancesObjectsObjectNameDefinitionsForbidden struct {
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsForbidden) Error() string {
	return fmt.Sprintf("[PUT /instances/objects/{objectName}/definitions][%d] replaceInstancesObjectsObjectNameDefinitionsForbidden ", 403)
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesObjectsObjectNameDefinitionsNotFound creates a ReplaceInstancesObjectsObjectNameDefinitionsNotFound with default headers values
func NewReplaceInstancesObjectsObjectNameDefinitionsNotFound() *ReplaceInstancesObjectsObjectNameDefinitionsNotFound {
	return &ReplaceInstancesObjectsObjectNameDefinitionsNotFound{}
}

/*ReplaceInstancesObjectsObjectNameDefinitionsNotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type ReplaceInstancesObjectsObjectNameDefinitionsNotFound struct {
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsNotFound) Error() string {
	return fmt.Sprintf("[PUT /instances/objects/{objectName}/definitions][%d] replaceInstancesObjectsObjectNameDefinitionsNotFound ", 404)
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed creates a ReplaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed with default headers values
func NewReplaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed() *ReplaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed {
	return &ReplaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed{}
}

/*ReplaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type ReplaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed struct {
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /instances/objects/{objectName}/definitions][%d] replaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed ", 405)
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesObjectsObjectNameDefinitionsNotAcceptable creates a ReplaceInstancesObjectsObjectNameDefinitionsNotAcceptable with default headers values
func NewReplaceInstancesObjectsObjectNameDefinitionsNotAcceptable() *ReplaceInstancesObjectsObjectNameDefinitionsNotAcceptable {
	return &ReplaceInstancesObjectsObjectNameDefinitionsNotAcceptable{}
}

/*ReplaceInstancesObjectsObjectNameDefinitionsNotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type ReplaceInstancesObjectsObjectNameDefinitionsNotAcceptable struct {
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsNotAcceptable) Error() string {
	return fmt.Sprintf("[PUT /instances/objects/{objectName}/definitions][%d] replaceInstancesObjectsObjectNameDefinitionsNotAcceptable ", 406)
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesObjectsObjectNameDefinitionsConflict creates a ReplaceInstancesObjectsObjectNameDefinitionsConflict with default headers values
func NewReplaceInstancesObjectsObjectNameDefinitionsConflict() *ReplaceInstancesObjectsObjectNameDefinitionsConflict {
	return &ReplaceInstancesObjectsObjectNameDefinitionsConflict{}
}

/*ReplaceInstancesObjectsObjectNameDefinitionsConflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type ReplaceInstancesObjectsObjectNameDefinitionsConflict struct {
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsConflict) Error() string {
	return fmt.Sprintf("[PUT /instances/objects/{objectName}/definitions][%d] replaceInstancesObjectsObjectNameDefinitionsConflict ", 409)
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType creates a ReplaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType with default headers values
func NewReplaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType() *ReplaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType {
	return &ReplaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType{}
}

/*ReplaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type ReplaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType struct {
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /instances/objects/{objectName}/definitions][%d] replaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType ", 415)
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceInstancesObjectsObjectNameDefinitionsInternalServerError creates a ReplaceInstancesObjectsObjectNameDefinitionsInternalServerError with default headers values
func NewReplaceInstancesObjectsObjectNameDefinitionsInternalServerError() *ReplaceInstancesObjectsObjectNameDefinitionsInternalServerError {
	return &ReplaceInstancesObjectsObjectNameDefinitionsInternalServerError{}
}

/*ReplaceInstancesObjectsObjectNameDefinitionsInternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type ReplaceInstancesObjectsObjectNameDefinitionsInternalServerError struct {
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /instances/objects/{objectName}/definitions][%d] replaceInstancesObjectsObjectNameDefinitionsInternalServerError ", 500)
}

func (o *ReplaceInstancesObjectsObjectNameDefinitionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
