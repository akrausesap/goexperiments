// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/connectorclient/models"
)

// UpdateInstancesConfigurationByConfigId2Reader is a Reader for the UpdateInstancesConfigurationByConfigId2 structure.
type UpdateInstancesConfigurationByConfigId2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateInstancesConfigurationByConfigId2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateInstancesConfigurationByConfigId2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateInstancesConfigurationByConfigId2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateInstancesConfigurationByConfigId2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateInstancesConfigurationByConfigId2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateInstancesConfigurationByConfigId2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewUpdateInstancesConfigurationByConfigId2MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewUpdateInstancesConfigurationByConfigId2NotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateInstancesConfigurationByConfigId2Conflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUpdateInstancesConfigurationByConfigId2UnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateInstancesConfigurationByConfigId2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateInstancesConfigurationByConfigId2OK creates a UpdateInstancesConfigurationByConfigId2OK with default headers values
func NewUpdateInstancesConfigurationByConfigId2OK() *UpdateInstancesConfigurationByConfigId2OK {
	return &UpdateInstancesConfigurationByConfigId2OK{}
}

/*UpdateInstancesConfigurationByConfigId2OK handles this case with default header values.

OK - Everything worked as expected
*/
type UpdateInstancesConfigurationByConfigId2OK struct {
	Payload *models.ElementInstanceConfig
}

func (o *UpdateInstancesConfigurationByConfigId2OK) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}/configuration/{configId}][%d] updateInstancesConfigurationByConfigId2OK  %+v", 200, o.Payload)
}

func (o *UpdateInstancesConfigurationByConfigId2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ElementInstanceConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInstancesConfigurationByConfigId2BadRequest creates a UpdateInstancesConfigurationByConfigId2BadRequest with default headers values
func NewUpdateInstancesConfigurationByConfigId2BadRequest() *UpdateInstancesConfigurationByConfigId2BadRequest {
	return &UpdateInstancesConfigurationByConfigId2BadRequest{}
}

/*UpdateInstancesConfigurationByConfigId2BadRequest handles this case with default header values.

Bad Request - Often due to a missing request parameter
*/
type UpdateInstancesConfigurationByConfigId2BadRequest struct {
}

func (o *UpdateInstancesConfigurationByConfigId2BadRequest) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}/configuration/{configId}][%d] updateInstancesConfigurationByConfigId2BadRequest ", 400)
}

func (o *UpdateInstancesConfigurationByConfigId2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstancesConfigurationByConfigId2Unauthorized creates a UpdateInstancesConfigurationByConfigId2Unauthorized with default headers values
func NewUpdateInstancesConfigurationByConfigId2Unauthorized() *UpdateInstancesConfigurationByConfigId2Unauthorized {
	return &UpdateInstancesConfigurationByConfigId2Unauthorized{}
}

/*UpdateInstancesConfigurationByConfigId2Unauthorized handles this case with default header values.

Unauthorized - An invalid element token, user secret and/or org secret provided
*/
type UpdateInstancesConfigurationByConfigId2Unauthorized struct {
}

func (o *UpdateInstancesConfigurationByConfigId2Unauthorized) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}/configuration/{configId}][%d] updateInstancesConfigurationByConfigId2Unauthorized ", 401)
}

func (o *UpdateInstancesConfigurationByConfigId2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstancesConfigurationByConfigId2Forbidden creates a UpdateInstancesConfigurationByConfigId2Forbidden with default headers values
func NewUpdateInstancesConfigurationByConfigId2Forbidden() *UpdateInstancesConfigurationByConfigId2Forbidden {
	return &UpdateInstancesConfigurationByConfigId2Forbidden{}
}

/*UpdateInstancesConfigurationByConfigId2Forbidden handles this case with default header values.

Forbidden - Access to the resource by the provider is forbidden
*/
type UpdateInstancesConfigurationByConfigId2Forbidden struct {
}

func (o *UpdateInstancesConfigurationByConfigId2Forbidden) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}/configuration/{configId}][%d] updateInstancesConfigurationByConfigId2Forbidden ", 403)
}

func (o *UpdateInstancesConfigurationByConfigId2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstancesConfigurationByConfigId2NotFound creates a UpdateInstancesConfigurationByConfigId2NotFound with default headers values
func NewUpdateInstancesConfigurationByConfigId2NotFound() *UpdateInstancesConfigurationByConfigId2NotFound {
	return &UpdateInstancesConfigurationByConfigId2NotFound{}
}

/*UpdateInstancesConfigurationByConfigId2NotFound handles this case with default header values.

Not found - The requested resource is not found
*/
type UpdateInstancesConfigurationByConfigId2NotFound struct {
}

func (o *UpdateInstancesConfigurationByConfigId2NotFound) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}/configuration/{configId}][%d] updateInstancesConfigurationByConfigId2NotFound ", 404)
}

func (o *UpdateInstancesConfigurationByConfigId2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstancesConfigurationByConfigId2MethodNotAllowed creates a UpdateInstancesConfigurationByConfigId2MethodNotAllowed with default headers values
func NewUpdateInstancesConfigurationByConfigId2MethodNotAllowed() *UpdateInstancesConfigurationByConfigId2MethodNotAllowed {
	return &UpdateInstancesConfigurationByConfigId2MethodNotAllowed{}
}

/*UpdateInstancesConfigurationByConfigId2MethodNotAllowed handles this case with default header values.

Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
*/
type UpdateInstancesConfigurationByConfigId2MethodNotAllowed struct {
}

func (o *UpdateInstancesConfigurationByConfigId2MethodNotAllowed) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}/configuration/{configId}][%d] updateInstancesConfigurationByConfigId2MethodNotAllowed ", 405)
}

func (o *UpdateInstancesConfigurationByConfigId2MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstancesConfigurationByConfigId2NotAcceptable creates a UpdateInstancesConfigurationByConfigId2NotAcceptable with default headers values
func NewUpdateInstancesConfigurationByConfigId2NotAcceptable() *UpdateInstancesConfigurationByConfigId2NotAcceptable {
	return &UpdateInstancesConfigurationByConfigId2NotAcceptable{}
}

/*UpdateInstancesConfigurationByConfigId2NotAcceptable handles this case with default header values.

Not acceptable - The response content type does not match the 'Accept' header value
*/
type UpdateInstancesConfigurationByConfigId2NotAcceptable struct {
}

func (o *UpdateInstancesConfigurationByConfigId2NotAcceptable) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}/configuration/{configId}][%d] updateInstancesConfigurationByConfigId2NotAcceptable ", 406)
}

func (o *UpdateInstancesConfigurationByConfigId2NotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstancesConfigurationByConfigId2Conflict creates a UpdateInstancesConfigurationByConfigId2Conflict with default headers values
func NewUpdateInstancesConfigurationByConfigId2Conflict() *UpdateInstancesConfigurationByConfigId2Conflict {
	return &UpdateInstancesConfigurationByConfigId2Conflict{}
}

/*UpdateInstancesConfigurationByConfigId2Conflict handles this case with default header values.

Conflict - If a resource being created already exists
*/
type UpdateInstancesConfigurationByConfigId2Conflict struct {
}

func (o *UpdateInstancesConfigurationByConfigId2Conflict) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}/configuration/{configId}][%d] updateInstancesConfigurationByConfigId2Conflict ", 409)
}

func (o *UpdateInstancesConfigurationByConfigId2Conflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstancesConfigurationByConfigId2UnsupportedMediaType creates a UpdateInstancesConfigurationByConfigId2UnsupportedMediaType with default headers values
func NewUpdateInstancesConfigurationByConfigId2UnsupportedMediaType() *UpdateInstancesConfigurationByConfigId2UnsupportedMediaType {
	return &UpdateInstancesConfigurationByConfigId2UnsupportedMediaType{}
}

/*UpdateInstancesConfigurationByConfigId2UnsupportedMediaType handles this case with default header values.

Unsupported media type - The server cannot handle the requested Content-Type
*/
type UpdateInstancesConfigurationByConfigId2UnsupportedMediaType struct {
}

func (o *UpdateInstancesConfigurationByConfigId2UnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}/configuration/{configId}][%d] updateInstancesConfigurationByConfigId2UnsupportedMediaType ", 415)
}

func (o *UpdateInstancesConfigurationByConfigId2UnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstancesConfigurationByConfigId2InternalServerError creates a UpdateInstancesConfigurationByConfigId2InternalServerError with default headers values
func NewUpdateInstancesConfigurationByConfigId2InternalServerError() *UpdateInstancesConfigurationByConfigId2InternalServerError {
	return &UpdateInstancesConfigurationByConfigId2InternalServerError{}
}

/*UpdateInstancesConfigurationByConfigId2InternalServerError handles this case with default header values.

Server error - Something went wrong on the Cloud Elements server
*/
type UpdateInstancesConfigurationByConfigId2InternalServerError struct {
}

func (o *UpdateInstancesConfigurationByConfigId2InternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}/configuration/{configId}][%d] updateInstancesConfigurationByConfigId2InternalServerError ", 500)
}

func (o *UpdateInstancesConfigurationByConfigId2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
