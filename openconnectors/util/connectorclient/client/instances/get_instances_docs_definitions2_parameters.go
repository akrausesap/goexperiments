// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetInstancesDocsDefinitions2Params creates a new GetInstancesDocsDefinitions2Params object
// with the default values initialized.
func NewGetInstancesDocsDefinitions2Params() *GetInstancesDocsDefinitions2Params {
	var (
		versionDefault = string("-1")
	)
	return &GetInstancesDocsDefinitions2Params{
		Version: &versionDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetInstancesDocsDefinitions2ParamsWithTimeout creates a new GetInstancesDocsDefinitions2Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetInstancesDocsDefinitions2ParamsWithTimeout(timeout time.Duration) *GetInstancesDocsDefinitions2Params {
	var (
		versionDefault = string("-1")
	)
	return &GetInstancesDocsDefinitions2Params{
		Version: &versionDefault,

		timeout: timeout,
	}
}

// NewGetInstancesDocsDefinitions2ParamsWithContext creates a new GetInstancesDocsDefinitions2Params object
// with the default values initialized, and the ability to set a context for a request
func NewGetInstancesDocsDefinitions2ParamsWithContext(ctx context.Context) *GetInstancesDocsDefinitions2Params {
	var (
		versionDefault = string("-1")
	)
	return &GetInstancesDocsDefinitions2Params{
		Version: &versionDefault,

		Context: ctx,
	}
}

// NewGetInstancesDocsDefinitions2ParamsWithHTTPClient creates a new GetInstancesDocsDefinitions2Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetInstancesDocsDefinitions2ParamsWithHTTPClient(client *http.Client) *GetInstancesDocsDefinitions2Params {
	var (
		versionDefault = string("-1")
	)
	return &GetInstancesDocsDefinitions2Params{
		Version:    &versionDefault,
		HTTPClient: client,
	}
}

/*GetInstancesDocsDefinitions2Params contains all the parameters to send to the API endpoint
for the get instances docs definitions2 operation typically these are written to a http.Request
*/
type GetInstancesDocsDefinitions2Params struct {

	/*Authorization
	  The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'

	*/
	Authorization string
	/*Basic
	  Include only OpenAPI / Swagger properties in definitions

	*/
	Basic *bool
	/*Discovery
	  Include discovery metadata in definitions

	*/
	Discovery *bool
	/*ID
	  The ID of the element instance

	*/
	ID int64
	/*OperationID
	  The id of the operation for which swagger docs is returned

	*/
	OperationID string
	/*ResolveReferences
	  Optionally resolve swagger references for an inline object definition

	*/
	ResolveReferences *bool
	/*Version
	  The element swagger version to get the corresponding element swagger, Passing in "-1" gives latest element swagger

	*/
	Version *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) WithTimeout(timeout time.Duration) *GetInstancesDocsDefinitions2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) WithContext(ctx context.Context) *GetInstancesDocsDefinitions2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) WithHTTPClient(client *http.Client) *GetInstancesDocsDefinitions2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) WithAuthorization(authorization string) *GetInstancesDocsDefinitions2Params {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithBasic adds the basic to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) WithBasic(basic *bool) *GetInstancesDocsDefinitions2Params {
	o.SetBasic(basic)
	return o
}

// SetBasic adds the basic to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) SetBasic(basic *bool) {
	o.Basic = basic
}

// WithDiscovery adds the discovery to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) WithDiscovery(discovery *bool) *GetInstancesDocsDefinitions2Params {
	o.SetDiscovery(discovery)
	return o
}

// SetDiscovery adds the discovery to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) SetDiscovery(discovery *bool) {
	o.Discovery = discovery
}

// WithID adds the id to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) WithID(id int64) *GetInstancesDocsDefinitions2Params {
	o.SetID(id)
	return o
}

// SetID adds the id to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) SetID(id int64) {
	o.ID = id
}

// WithOperationID adds the operationID to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) WithOperationID(operationID string) *GetInstancesDocsDefinitions2Params {
	o.SetOperationID(operationID)
	return o
}

// SetOperationID adds the operationId to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) SetOperationID(operationID string) {
	o.OperationID = operationID
}

// WithResolveReferences adds the resolveReferences to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) WithResolveReferences(resolveReferences *bool) *GetInstancesDocsDefinitions2Params {
	o.SetResolveReferences(resolveReferences)
	return o
}

// SetResolveReferences adds the resolveReferences to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) SetResolveReferences(resolveReferences *bool) {
	o.ResolveReferences = resolveReferences
}

// WithVersion adds the version to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) WithVersion(version *string) *GetInstancesDocsDefinitions2Params {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get instances docs definitions2 params
func (o *GetInstancesDocsDefinitions2Params) SetVersion(version *string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetInstancesDocsDefinitions2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.Basic != nil {

		// query param basic
		var qrBasic bool
		if o.Basic != nil {
			qrBasic = *o.Basic
		}
		qBasic := swag.FormatBool(qrBasic)
		if qBasic != "" {
			if err := r.SetQueryParam("basic", qBasic); err != nil {
				return err
			}
		}

	}

	if o.Discovery != nil {

		// query param discovery
		var qrDiscovery bool
		if o.Discovery != nil {
			qrDiscovery = *o.Discovery
		}
		qDiscovery := swag.FormatBool(qrDiscovery)
		if qDiscovery != "" {
			if err := r.SetQueryParam("discovery", qDiscovery); err != nil {
				return err
			}
		}

	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	// path param operationId
	if err := r.SetPathParam("operationId", o.OperationID); err != nil {
		return err
	}

	if o.ResolveReferences != nil {

		// query param resolveReferences
		var qrResolveReferences bool
		if o.ResolveReferences != nil {
			qrResolveReferences = *o.ResolveReferences
		}
		qResolveReferences := swag.FormatBool(qrResolveReferences)
		if qResolveReferences != "" {
			if err := r.SetQueryParam("resolveReferences", qResolveReferences); err != nil {
				return err
			}
		}

	}

	if o.Version != nil {

		// query param version
		var qrVersion string
		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := qrVersion
		if qVersion != "" {
			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
