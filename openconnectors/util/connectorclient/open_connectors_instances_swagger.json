{
    "basePath": "/elements/api-v2",
    "paths": {
        "/instances": {
            "get": {
                "operationId": "getInstances",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The tags to search, e.g., development, qa, my sample tag",
                        "in": "query",
                        "name": "tags[]",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "description": "Search by instance name or element key",
                        "in": "query",
                        "name": "searchText",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
                        "in": "query",
                        "name": "nextPage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The page size. Defaults to 200 if not provided. Maximum of 200",
                        "format": "int64",
                        "in": "query",
                        "name": "pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Retrieve element instance configuration and tag information",
                        "in": "query",
                        "name": "hydrate",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ElementInstance"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve all element instances from a specified path.  The instances go through Cloud Elements to your console.  Specifying an instance that does not exist results in an error response.",
                "tags": [
                    "instances"
                ]
            },
            "post": {
                "operationId": "createInstance",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The element instance to create",
                        "in": "body",
                        "name": "elementInstance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Create a new element instance in your console.  Instance creation will flow through Cloud Elements to your console.",
                "tags": [
                    "instances"
                ]
            },
            "delete": {
                "operationId": "deleteInstances",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Delete an instance associated with an instance token in authorization header. Specifying an instance associated with a given token that does not exist will result in an error message.",
                "tags": [
                    "instances"
                ]
            },
            "put": {
                "operationId": "replaceInstances",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The fields of the element instance to update",
                        "in": "body",
                        "name": "elementInstance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Update an instance associated with a given token in authorization header.  Specifying an instance associated with an token that does not exist will result in an error message.",
                "tags": [
                    "instances"
                ]
            },
            "patch": {
                "operationId": "updateInstances",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The fields of the element instance to update",
                        "in": "body",
                        "name": "elementInstance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Update an instance partially associated with a given token in authorization header.  Specifying an instance associated with an token that does not exist will result in an error message.",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/configuration": {
            "get": {
                "operationId": "getInstancesConfiguration",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ElementInstanceConfig"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve configuration for an element instance with an associated token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/configuration/{configId}": {
            "get": {
                "operationId": "getInstancesConfigurationByConfigId",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance config",
                        "format": "int64",
                        "in": "path",
                        "name": "configId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/ElementInstanceConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve configuration for an element instance with an associated token in authorization header",
                "tags": [
                    "instances"
                ]
            },
            "patch": {
                "operationId": "updateInstancesConfigurationByConfigId",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance config",
                        "format": "int64",
                        "in": "path",
                        "name": "configId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The updated element instance config",
                        "in": "body",
                        "name": "config",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementInstanceConfigUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/ElementInstanceConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Update configuration for an element instance with an associated token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/docs": {
            "get": {
                "operationId": "getInstancesDocs",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The id of the operation for which swagger docs is returned",
                        "in": "query",
                        "name": "operationId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "default": "-1",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an instance specific swagger documentation with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/docs/{operationId}": {
            "get": {
                "operationId": "getInstancesDocByOperationId",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The id of the operation for which swagger docs is returned",
                        "format": "int64",
                        "in": "path",
                        "name": "operationId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Include discovery metadata in definitions",
                        "in": "query",
                        "name": "discovery",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Include only OpenAPI / Swagger properties in definitions",
                        "in": "query",
                        "name": "basic",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "default": "-1",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an instance specific swagger documentation for an operation with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/docs/{operationId}/definitions": {
            "get": {
                "operationId": "getInstancesDocsDefinitions",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The id of the operation for which swagger docs is returned",
                        "format": "int64",
                        "in": "path",
                        "name": "operationId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Include discovery metadata in definitions",
                        "in": "query",
                        "name": "discovery",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Optionally resolve swagger references for an inline object definition",
                        "in": "query",
                        "name": "resolveReferences",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Include only OpenAPI / Swagger properties in definitions",
                        "in": "query",
                        "name": "basic",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "default": "-1",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an definitionation for an operation id with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/enabled": {
            "put": {
                "operationId": "replaceInstancesEnabled",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Enable an element instance with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            },
            "delete": {
                "operationId": "deleteInstancesEnabled",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Disable an element instance with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/events": {
            "get": {
                "operationId": "getInstancesEvents",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Event"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve events for all element instances or for an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/events/analytics": {
            "get": {
                "operationId": "getInstancesEventsAnalytics",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Start time in ISO 8601 format, e.g. '2014-04-14T00:00:00-4:00'. An unspecified time zone defaults to UTC. Defaults to one week prior to the current date.",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "End time in ISO 8601 format, e.g. '2014-04-14T00:00:00-4:00'. An unspecified time zone defaults to UTC. Defaults to the current date.",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Interval to be sent for the data to be returned, it can be year, quarter, month, week, day, hour, minute, second",
                        "enum": [
                            "year",
                            "quarter",
                            "month",
                            "week",
                            "day",
                            "hour",
                            "minute",
                            "second"
                        ],
                        "in": "query",
                        "name": "interval",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The comma-separated list of account IDs to search. Only applicable for organization admin. Defaults to current user's account only.'",
                        "in": "query",
                        "name": "accountIds[]",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AnalyticsEntry"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve the number of events within a given date/time range for all element instances within the specified account(s).",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/events/analytics/accounts": {
            "get": {
                "operationId": "getInstancesEventsAnalyticsAccounts",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Start time in ISO 8601 format, e.g. '2014-04-14T00:00:00-4:00'. An unspecified time zone defaults to UTC. Defaults to one week prior to the current date.",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "End time in ISO 8601 format, e.g. '2014-04-14T00:00:00-4:00'. An unspecified time zone defaults to UTC. Defaults to the current date.",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Interval to be sent for the data to be returned, it can be year, quarter, month, week, day, hour, minute, second",
                        "enum": [
                            "year",
                            "quarter",
                            "month",
                            "week",
                            "day",
                            "hour",
                            "minute",
                            "second"
                        ],
                        "in": "query",
                        "name": "interval",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The comma-separated list of account IDs to search. Only applicable for organization admins. Defaults to current user's account only.'",
                        "in": "query",
                        "name": "accountIds[]",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AccountAnalyticsEntry"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve the number of events within a given date/time range, aggregated by account ID. This API is really only useful for organization admins where more than one account exists.",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/events/analytics/instances": {
            "get": {
                "operationId": "getInstancesEventsAnalyticsInstances",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Start time in ISO 8601 format, e.g. '2014-04-14T00:00:00-4:00'. An unspecified time zone defaults to UTC. Defaults to one week prior to the current date.",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "End time in ISO 8601 format, e.g. '2014-04-14T00:00:00-4:00'. An unspecified time zone defaults to UTC. Defaults to the current date.",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Interval to be sent for the data to be returned, it can be year, quarter, month, week, day, hour, minute, second",
                        "enum": [
                            "year",
                            "quarter",
                            "month",
                            "week",
                            "day",
                            "hour",
                            "minute",
                            "second"
                        ],
                        "in": "query",
                        "name": "interval",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The comma-separated list of account IDs to search. Only applicable for organization admins. Defaults to current user's account only.'",
                        "in": "query",
                        "name": "accountIds[]",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/InstanceAnalyticsEntry"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve the number of events  within a given date/time range, aggregated by element instance ID.",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/events/dispositions": {
            "get": {
                "operationId": "getInstancesEventsDispositions",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Start time in ISO 8601 format, e.g. '2014-04-14T00:00:00-4:00'. An unspecified time zone defaults to UTC. Defaults to one week prior to the current date.",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "End time in ISO 8601 format, e.g. '2014-04-14T00:00:00-4:00'. An unspecified time zone defaults to UTC. Defaults to the current date.",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
                        "in": "query",
                        "name": "nextPage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The page size. Defaults to 200 if not provided. Maximum of 200",
                        "format": "int64",
                        "in": "query",
                        "name": "pageSize",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Event"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve events for all element instances or for an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/events/{eventId}": {
            "get": {
                "operationId": "getInstancesEventByEventId",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the event",
                        "format": "int64",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an event for all element instances or for an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/objects/definitions": {
            "get": {
                "operationId": "getInstancesObjectsDefinitions",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Dictionary"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve all of the object definitions within a specific instance with an associated instance token in authorization header.  If no object definitions exist, then this will result in an error response.",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/objects/{objectName}/definitions": {
            "delete": {
                "operationId": "deleteInstancesObjectsObjectNameDefinitions",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Delete an object definition associated with an objectName for a specific instance with an associated instance token in authorization header.  Specifying an object name that does not have an object definition will result in an error response.",
                "tags": [
                    "instances"
                ]
            },
            "get": {
                "operationId": "getInstancesObjectsObjectNameDefinitions",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Definition"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve a specific object definition associated with an objectName within a specific instance with an associated instance token in authorization header.  Specifying an object definition associated with a given objectName that does not exist will result in an error response.",
                "tags": [
                    "instances"
                ]
            },
            "post": {
                "operationId": "createInstanceObjectObjectNameDefinition",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The object definition",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Definition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Definition"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Create a new object definition associated with an objectName within a specific instance with an associated instance token in authorization header.  The definitions allow you to define what an object looks like within an instance.",
                "tags": [
                    "instances"
                ]
            },
            "put": {
                "operationId": "replaceInstancesObjectsObjectNameDefinitions",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The object definition",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Definition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Definition"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Update a specific object's definition associated with an objectName within a specific instance with an associated instance token in authorization header. Specifying an object definition associated with a given objectName that does not exist will result in an error response.",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/trace-logging": {
            "put": {
                "operationId": "replaceInstancesTraceLogging",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Optional body containing configuration (e.g. duration) for enabling trace-level logging.",
                        "in": "body",
                        "name": "config",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TraceLoggingConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Temporarily enable trace-level usage logging for an element instance with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            },
            "delete": {
                "operationId": "deleteInstancesTraceLogging",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Disable trace-level usage logging for an element instance with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/transformations": {
            "delete": {
                "operationId": "deleteInstancesTransformations",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Delete the transformation for an element instance with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            },
            "get": {
                "operationId": "getInstancesTransformations",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/TransformationLibrary"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an element instance transformation with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/transformations/{objectName}": {
            "delete": {
                "operationId": "deleteInstancesTransformationByObjectName",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Delete the transformation for an element instance for a specific object with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            },
            "get": {
                "operationId": "getInstancesTransformationByObjectName",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Transformation"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an element instance transformation for a specific object with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            },
            "post": {
                "operationId": "createInstanceTransformationByObjectName",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The transformation to create",
                        "in": "body",
                        "name": "transformation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Transformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Transformation"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Create a transformation for an element instance for a specific object",
                "tags": [
                    "instances"
                ]
            },
            "put": {
                "operationId": "replaceInstancesTransformationByObjectName",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;, Element &lt;token&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The transformation to update",
                        "in": "body",
                        "name": "transformation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Transformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Transformation"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Update the transformation for an element instance for a specific object with an associated instance token in authorization header",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}": {
            "delete": {
                "operationId": "deleteInstanceById",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Delete an instance associated with a given ID from your console. Specifying an instance associated with a given ID that does not exist will result in an error message.",
                "tags": [
                    "instances"
                ]
            },
            "get": {
                "operationId": "getInstanceById",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an element instance associated with a given ID from a specified path.  The instance goes through Cloud Elements to your console.  Specifying an instance with an associated ID that does not exist results in an error response.",
                "tags": [
                    "instances"
                ]
            },
            "put": {
                "operationId": "replaceInstanceById",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The fields of the element instance to update",
                        "in": "body",
                        "name": "elementInstance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Update an instance associated with a given ID from your console.  Specifying an instance associated with an ID that does not exist will result in an error message.",
                "tags": [
                    "instances"
                ]
            },
            "patch": {
                "operationId": "updateInstanceById",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The fields of the element instance to update",
                        "in": "body",
                        "name": "elementInstance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/ElementInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Update an instance partially associated with a given ID from your console.  Specifying an instance associated with an ID that does not exist will result in an error message.",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/configuration": {
            "get": {
                "operationId": "getInstancesConfiguration2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ElementInstanceConfig"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve configuration for an element instance",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/configuration/{configId}": {
            "get": {
                "operationId": "getInstancesConfigurationByConfigId2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The ID of the element instance config",
                        "format": "int64",
                        "in": "path",
                        "name": "configId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/ElementInstanceConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve configuration for an element instance",
                "tags": [
                    "instances"
                ]
            },
            "patch": {
                "operationId": "updateInstancesConfigurationByConfigId2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The ID of the element instance config",
                        "format": "int64",
                        "in": "path",
                        "name": "configId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The updated element instance config",
                        "in": "body",
                        "name": "config",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementInstanceConfigUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/ElementInstanceConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Update configuration for an element instance",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/docs": {
            "get": {
                "operationId": "getInstancesDocs2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The id of the operation for which swagger docs is returned",
                        "in": "query",
                        "name": "operationId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "default": "-1",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an instance specific swagger documentation",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/docs/{operationId}": {
            "get": {
                "operationId": "getInstancesDocByOperationId2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The id of the operation for which swagger docs is returned",
                        "format": "int64",
                        "in": "path",
                        "name": "operationId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Include discovery metadata in definitions",
                        "in": "query",
                        "name": "discovery",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Include only OpenAPI / Swagger properties in definitions",
                        "in": "query",
                        "name": "basic",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "default": "-1",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an instance specific swagger documentation",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/docs/{operationId}/definitions": {
            "get": {
                "operationId": "getInstancesDocsDefinitions2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The id of the operation for which swagger docs is returned",
                        "format": "int64",
                        "in": "path",
                        "name": "operationId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Include discovery metadata in definitions",
                        "in": "query",
                        "name": "discovery",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Optionally resolve swagger references for an inline object definition",
                        "in": "query",
                        "name": "resolveReferences",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Include only OpenAPI / Swagger properties in definitions",
                        "in": "query",
                        "name": "basic",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "default": "-1",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an instance specific swagger documentation",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/enabled": {
            "put": {
                "operationId": "replaceInstancesEnabled2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Enable an element instance",
                "tags": [
                    "instances"
                ]
            },
            "delete": {
                "operationId": "deleteInstancesEnabled2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Disable an element instance",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/events": {
            "get": {
                "operationId": "getInstancesEvents2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Event"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve events for an element instance",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/events/{eventId}": {
            "get": {
                "operationId": "getInstancesEventByEventId2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The ID of the event",
                        "format": "int64",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an event for an element instance",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/objects/definitions": {
            "get": {
                "operationId": "getInstancesObjectsDefinitions2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Dictionary"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve all of the object definitions at all levels that could map to a specific instance.  If no object definitions exist, then this will result in an error response.",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/objects/{objectName}/definitions": {
            "delete": {
                "operationId": "deleteInstancesObjectsObjectNameDefinitions2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Delete an object definition associated with an objectName for a specific instance.  Specifying an object name that does not have an object definition will result in an error response.",
                "tags": [
                    "instances"
                ]
            },
            "get": {
                "operationId": "getInstancesObjectsObjectNameDefinitions2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Definition"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve a specific object definition associated with an objectName within a specific instance.  Specifying an object definition associated with a given objectName that does not exist will result in an error response.",
                "tags": [
                    "instances"
                ]
            },
            "post": {
                "operationId": "createInstanceObjectObjectNameDefinition2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The object definition",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Definition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Definition"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Create a new object definition associated with an objectName within a specific instance.  The definitions allow you to define what an object looks like within an instance.",
                "tags": [
                    "instances"
                ]
            },
            "put": {
                "operationId": "replaceInstancesObjectsObjectNameDefinitions2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The object definition",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Definition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Definition"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Update a specific object's definition associated with an objectName within a specific instance. Specifying an object definition associated with a given objectName that does not exist will result in an error response.",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/trace-logging": {
            "put": {
                "operationId": "replaceInstancesTraceLogging2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Optional body containing configuration (e.g. duration) for enabling trace-level logging.",
                        "in": "body",
                        "name": "config",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TraceLoggingConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Temporarily enable trace-level usage logging for an element instance",
                "tags": [
                    "instances"
                ]
            },
            "delete": {
                "operationId": "deleteInstancesTraceLogging2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Disable trace-level usage logging for an element instance",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/transformations": {
            "delete": {
                "operationId": "deleteInstancesTransformations2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Delete the transformation for an element instance",
                "tags": [
                    "instances"
                ]
            },
            "get": {
                "operationId": "getInstancesTransformations2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/TransformationLibrary"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an element instance transformation",
                "tags": [
                    "instances"
                ]
            }
        },
        "/instances/{id}/transformations/{objectName}": {
            "delete": {
                "operationId": "deleteInstancesTransformationByObjectName2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected"
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Delete the transformation for an element instance for a specific object",
                "tags": [
                    "instances"
                ]
            },
            "get": {
                "operationId": "getInstancesTransformationByObjectName2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Transformation"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Retrieve an element instance transformation for a specific object",
                "tags": [
                    "instances"
                ]
            },
            "post": {
                "operationId": "createInstanceTransformationByObjectName2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The transformation to create",
                        "in": "body",
                        "name": "transformation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Transformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Transformation"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Create a transformation for an element instance for a specific object",
                "tags": [
                    "instances"
                ]
            },
            "put": {
                "operationId": "replaceInstancesTransformationByObjectName2",
                "parameters": [
                    {
                        "description": "The authorization tokens. The format for the header value is 'User &lt;user secret&gt;, Organization &lt;org secret&gt;'",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the element instance",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The name of the object",
                        "in": "path",
                        "name": "objectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The transformation to update",
                        "in": "body",
                        "name": "transformation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Transformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "$ref": "#/definitions/Transformation"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the 'Accept' header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                },
                "summary": "Update the transformation for an element instance for a specific object",
                "tags": [
                    "instances"
                ]
            }
        }
    },
    "host": "api.openconnectors.ext.hanatrial.ondemand.com",
    "schemes": [
        "https"
    ],
    "definitions": {
        "AccountAnalyticsRecord": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "InstanceAnalyticsRecord": {
            "properties": {
                "instanceId": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AccountAnalyticsEntry": {
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountAnalyticsRecord"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InstanceAnalyticsEntry": {
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InstanceAnalyticsRecord"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AnalyticsEntry": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Configuration": {
            "properties": {
                "properties": {
                    "$ref": "#/definitions/ConfigurationProperty"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConfigurationProperty": {
            "properties": {
                "<key>": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConfigurationPropertyMap": {
            "properties": {
                "<replace_your_config_property_name>": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Definition": {
            "properties": {
                "fields": {
                    "items": {
                        "$ref": "#/definitions/Field"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Dictionary": {
            "properties": {
                "<object_name>": {
                    "$ref": "#/definitions/Definition"
                },
                "level": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Element": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "authenticationType": {
                    "type": "string"
                },
                "configDescription": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "number"
                },
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "existingAccountDescription": {
                    "type": "string"
                },
                "hub": {
                    "type": "string"
                },
                "id": {
                    "type": "number"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "signupURL": {
                    "type": "string"
                },
                "transformationsEnabled": {
                    "type": "boolean"
                },
                "trialAccount": {
                    "type": "boolean"
                },
                "trialAccountDescription": {
                    "type": "string"
                },
                "typeOauth": {
                    "type": "boolean"
                },
                "updatedDate": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ElementInstance": {
            "properties": {
                "cacheTimeToLive": {
                    "type": "integer"
                },
                "cachingEnabled": {
                    "type": "boolean"
                },
                "channelName": {
                    "type": "string"
                },
                "configuration": {
                    "$ref": "#/definitions/ConfigurationPropertyMap"
                },
                "createdDate": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "element": {
                    "$ref": "#/definitions/Element"
                },
                "id": {
                    "type": "number"
                },
                "maxCacheSize": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "providerData": {
                    "$ref": "#/definitions/ProviderPropertyMap"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "token": {},
                "updatedDate": {
                    "type": "number"
                },
                "traceLoggingEnabled": {
                    "type": "boolean"
                },
                "valid": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            },
            "required": [
                "cachingEnabled"
            ],
            "type": "object"
        },
        "ElementInstanceConfig": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "hideFromConsole": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "propertyValue": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ElementInstanceConfigUpdate": {
            "properties": {
                "propertyValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Field": {
            "properties": {
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProviderPropertyMap": {
            "properties": {
                "<replace_your_provider_property_name>": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "emailAddress": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Transformation": {
            "properties": {
                "configuration": {
                    "items": {
                        "$ref": "#/definitions/Configuration"
                    },
                    "type": "array"
                },
                "fields": {
                    "items": {
                        "$ref": "#/definitions/TransformationField"
                    },
                    "type": "array"
                },
                "level": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TransformationField": {
            "properties": {
                "configuration": {
                    "items": {
                        "$ref": "#/definitions/Configuration"
                    },
                    "type": "array"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vendorPath": {
                    "type": "string"
                },
                "vendorType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TraceLoggingConfig": {
            "properties": {
                "duration": {
                    "type": "integer",
                    "description": "The duration, in minutes, to enable trace-level logging for. Defaults to 30 minutes."
                }
            },
            "type": "object"
        },
        "TransformationLibrary": {
            "properties": {
                "<object_name>": {
                    "$ref": "#/definitions/Transformation"
                }
            },
            "type": "object"
        },
        "EventElementInstance": {
            "type": "object",
            "properties": {
                "eventId": {
                    "type": "string"
                },
                "elementInstanceId": {
                    "type": "integer"
                },
                "notificationId": {
                    "type": "integer"
                },
                "notifiedData": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "eventElementInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventElementInstance"
                    }
                },
                "providerData": {
                    "type": "string"
                },
                "notifiedData": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "eventDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "BulkStatus": {
            "description": "Status of the bulk upload.",
            "properties": {
                "batchId": {
                    "description": "Contact/Leads loaded",
                    "type": "number"
                },
                "message": {
                    "type": "string"
                },
                "numOfLeadsProcessed": {
                    "description": "Contact/Leads loaded",
                    "type": "number"
                },
                "numOfRowsFailed": {
                    "description": "Failed count",
                    "type": "number"
                },
                "numOfRowsWithWarning": {
                    "description": "Contact/Leads that had warnings",
                    "type": "number"
                },
                "status": {
                    "description": "Status of the bulk job",
                    "type": "string"
                }
            }
        },
        "BulkLoad": {
            "description": "BulkLoad response of bulk upload.",
            "properties": {
                "id": {
                    "description": "Id of the bulk job",
                    "type": "number"
                },
                "status": {
                    "description": "Status of the bulk job",
                    "type": "string"
                }
            }
        },
        "BulkQuery": {
            "description": "BulkLoad response of bulk download.",
            "properties": {
                "id": {
                    "description": "Id of the bulk job",
                    "type": "number"
                },
                "status": {
                    "description": "Status of the bulk job",
                    "type": "string"
                }
            }
        },
        "Pong": {
            "properties": {
                "dateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                }
            }
        },
        "ModelDate": {
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        }
    },
    "swagger": "2.0",
    "info": {
        "contact": {
            "email": "support@cloud-elements.com"
        },
        "title": "Instances",
        "version": "api-v2"
    },
    "tags": [
        {
            "description": "The Instance APIs",
            "name": "instances"
        }
    ]
}