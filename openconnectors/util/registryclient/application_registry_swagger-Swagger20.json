{
  "swagger": "2.0",
  "info": {
    "title": "Kyma Application Registry API",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/health": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "The service is in a good health"
          }
        },
        "tags": [
          "health"
        ],
        "operationId": "getHealth",
        "summary": "Returns health of a service"
      }
    },
    "/v1/metadata/services": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/Service"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/MetadataErrorResponse"
            }
          }
        },
        "tags": [
          "services"
        ],
        "operationId": "getServices",
        "summary": "Gets all registered services"
      },
      "post": {
        "parameters": [
          {
            "description": "Service object to be registered",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceId"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/MetadataErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/MetadataErrorResponse"
            }
          }
        },
        "tags": [
          "services"
        ],
        "operationId": "registerService",
        "summary": "Registers a new service"
      }
    },
    "/v1/metadata/services/{serviceId}": {
      "delete": {
        "parameters": [
          {
            "description": "ID of a service",
            "format": "uuid",
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Service not found",
            "schema": {
              "$ref": "#/definitions/MetadataErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/MetadataErrorResponse"
            }
          }
        },
        "tags": [
          "services"
        ],
        "operationId": "deleteServiceByServiceId",
        "summary": "Deletes a service by service ID"
      },
      "get": {
        "parameters": [
          {
            "description": "ID of a service",
            "format": "uuid",
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceDetails"
            }
          },
          "404": {
            "description": "Service not found",
            "schema": {
              "$ref": "#/definitions/MetadataErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/MetadataErrorResponse"
            }
          }
        },
        "tags": [
          "services"
        ],
        "operationId": "getServiceByServiceId",
        "summary": "Gets a service by service ID"
      },
      "put": {
        "parameters": [
          {
            "description": "ID of a service",
            "format": "uuid",
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Service object to be stored",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Service not found",
            "schema": {
              "$ref": "#/definitions/MetadataErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/MetadataErrorResponse"
            }
          }
        },
        "tags": [
          "services"
        ],
        "operationId": "updateService",
        "summary": "Updates a service by service ID"
      }
    }
  },
  "definitions": {
    "Api": {
      "properties": {
        "ApiType": {
          "description": "API type, for example OData",
          "type": "string"
        },
        "SpecificationUrl": {
          "format": "uri",
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/ApiCredentials"
        },
        "requestParameters": {
          "$ref": "#/definitions/RequestParameters"
        },
        "spec": {
          "description": "OpenApi v2 swagger file: https://github.com/OAI/OpenAPI-Specification/blob/master/schemas/v2.0/schema.json",
          "type": "object"
        },
        "specificationCredentials": {
          "$ref": "#/definitions/SpecificationCredentials"
        },
        "specificationRequestParameters": {
          "$ref": "#/definitions/RequestParameters"
        },
        "targetUrl": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "targetUrl"
      ],
      "type": "object"
    },
    "ApiCredentials": {
      "properties": {
        "basic": {
          "$ref": "#/definitions/Basic"
        },
        "certificateGen": {
          "$ref": "#/definitions/CertificateGen"
        },
        "oauth": {
          "$ref": "#/definitions/OAuth"
        }
      },
      "type": "object"
    },
    "ApiCredentialsUpdate": {
      "properties": {
        "basic": {
          "$ref": "#/definitions/Basic"
        },
        "certificateGen": {
          "$ref": "#/definitions/CertificateGenUpdate"
        },
        "oauth": {
          "$ref": "#/definitions/OAuth"
        }
      },
      "type": "object"
    },
    "ApiUpdate": {
      "properties": {
        "ApiType": {
          "description": "API type, for example OData",
          "type": "string"
        },
        "SpecificationUrl": {
          "format": "uri",
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/ApiCredentialsUpdate"
        },
        "spec": {
          "description": "OpenApi v2 swagger file: https://github.com/OAI/OpenAPI-Specification/blob/master/schemas/v2.0/schema.json",
          "type": "object"
        },
        "targetUrl": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "targetUrl"
      ],
      "type": "object"
    },
    "Basic": {
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CertificateGen": {
      "properties": {
        "certificate": {
          "type": "string"
        },
        "commonName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CertificateGenUpdate": {
      "properties": {
        "commonName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Document": {
      "properties": {
        "source": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "type",
        "source"
      ],
      "type": "object"
    },
    "Documentation": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "docs": {
          "items": {
            "$ref": "#/definitions/Document"
          },
          "type": "array"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "displayName",
        "description",
        "type"
      ],
      "type": "object"
    },
    "Events": {
      "properties": {
        "spec": {
          "description": "AsyncApi file v1: https://github.com/asyncapi/asyncapi/blob/develop/schema/asyncapi.json",
          "type": "object"
        }
      },
      "type": "object"
    },
    "MetadataErrorResponse": {
      "properties": {
        "code": {
          "type": "integer"
        },
        "error": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OAuth": {
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "url",
        "clientId",
        "clientSecret"
      ],
      "type": "object"
    },
    "RequestParameters": {
      "properties": {
        "headers": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": "Additional headers to be injected during auth requests",
          "type": "object"
        },
        "queryParameters": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": "Additional query parameters to be injected during auth requests",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Service": {
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServiceDetails": {
      "properties": {
        "api": {
          "$ref": "#/definitions/Api"
        },
        "description": {
          "type": "string"
        },
        "documentation": {
          "$ref": "#/definitions/Documentation"
        },
        "events": {
          "$ref": "#/definitions/Events"
        },
        "identifier": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        }
      },
      "required": [
        "provider",
        "name",
        "description"
      ],
      "type": "object"
    },
    "ServiceId": {
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServiceUpdate": {
      "properties": {
        "api": {
          "$ref": "#/definitions/Api"
        },
        "description": {
          "type": "string"
        },
        "documentation": {
          "$ref": "#/definitions/Documentation"
        },
        "events": {
          "$ref": "#/definitions/Events"
        },
        "identifier": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        }
      },
      "required": [
        "provider",
        "name",
        "description"
      ],
      "type": "object"
    },
    "SpecificationCredentials": {
      "properties": {
        "basic": {
          "$ref": "#/definitions/Basic"
        },
        "oauth": {
          "$ref": "#/definitions/OAuth"
        }
      },
      "type": "object"
    }
  },
  "tags": [
    {
      "description": "API for registering services in Kyma.",
      "name": "Application Registry"
    }
  ],
  "x-components": {}
}
