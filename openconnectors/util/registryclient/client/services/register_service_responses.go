// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/registryclient/models"
)

// RegisterServiceReader is a Reader for the RegisterService structure.
type RegisterServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRegisterServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRegisterServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewRegisterServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRegisterServiceOK creates a RegisterServiceOK with default headers values
func NewRegisterServiceOK() *RegisterServiceOK {
	return &RegisterServiceOK{}
}

/*RegisterServiceOK handles this case with default header values.

Successful operation
*/
type RegisterServiceOK struct {
	Payload *models.ServiceID
}

func (o *RegisterServiceOK) Error() string {
	return fmt.Sprintf("[POST /v1/metadata/services][%d] registerServiceOK  %+v", 200, o.Payload)
}

func (o *RegisterServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterServiceBadRequest creates a RegisterServiceBadRequest with default headers values
func NewRegisterServiceBadRequest() *RegisterServiceBadRequest {
	return &RegisterServiceBadRequest{}
}

/*RegisterServiceBadRequest handles this case with default header values.

Bad request
*/
type RegisterServiceBadRequest struct {
	Payload *models.MetadataErrorResponse
}

func (o *RegisterServiceBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/metadata/services][%d] registerServiceBadRequest  %+v", 400, o.Payload)
}

func (o *RegisterServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetadataErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterServiceInternalServerError creates a RegisterServiceInternalServerError with default headers values
func NewRegisterServiceInternalServerError() *RegisterServiceInternalServerError {
	return &RegisterServiceInternalServerError{}
}

/*RegisterServiceInternalServerError handles this case with default header values.

Internal server error
*/
type RegisterServiceInternalServerError struct {
	Payload *models.MetadataErrorResponse
}

func (o *RegisterServiceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/metadata/services][%d] registerServiceInternalServerError  %+v", 500, o.Payload)
}

func (o *RegisterServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetadataErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
