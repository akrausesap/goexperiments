// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/akrausesap/goexperiments/openconnectors/util/registryclient/models"
)

// V1MetadataServicesByServiceIDGetReader is a Reader for the V1MetadataServicesByServiceIDGet structure.
type V1MetadataServicesByServiceIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1MetadataServicesByServiceIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV1MetadataServicesByServiceIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewV1MetadataServicesByServiceIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV1MetadataServicesByServiceIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV1MetadataServicesByServiceIDGetOK creates a V1MetadataServicesByServiceIDGetOK with default headers values
func NewV1MetadataServicesByServiceIDGetOK() *V1MetadataServicesByServiceIDGetOK {
	return &V1MetadataServicesByServiceIDGetOK{}
}

/*V1MetadataServicesByServiceIDGetOK handles this case with default header values.

Successful operation
*/
type V1MetadataServicesByServiceIDGetOK struct {
	Payload *models.ServiceDetails
}

func (o *V1MetadataServicesByServiceIDGetOK) Error() string {
	return fmt.Sprintf("[GET /v1/metadata/services/{serviceId}][%d] v1MetadataServicesByServiceIdGetOK  %+v", 200, o.Payload)
}

func (o *V1MetadataServicesByServiceIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1MetadataServicesByServiceIDGetNotFound creates a V1MetadataServicesByServiceIDGetNotFound with default headers values
func NewV1MetadataServicesByServiceIDGetNotFound() *V1MetadataServicesByServiceIDGetNotFound {
	return &V1MetadataServicesByServiceIDGetNotFound{}
}

/*V1MetadataServicesByServiceIDGetNotFound handles this case with default header values.

Service not found
*/
type V1MetadataServicesByServiceIDGetNotFound struct {
	Payload *models.MetadataErrorResponse
}

func (o *V1MetadataServicesByServiceIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/metadata/services/{serviceId}][%d] v1MetadataServicesByServiceIdGetNotFound  %+v", 404, o.Payload)
}

func (o *V1MetadataServicesByServiceIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetadataErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1MetadataServicesByServiceIDGetDefault creates a V1MetadataServicesByServiceIDGetDefault with default headers values
func NewV1MetadataServicesByServiceIDGetDefault(code int) *V1MetadataServicesByServiceIDGetDefault {
	return &V1MetadataServicesByServiceIDGetDefault{
		_statusCode: code,
	}
}

/*V1MetadataServicesByServiceIDGetDefault handles this case with default header values.

Internal server error
*/
type V1MetadataServicesByServiceIDGetDefault struct {
	_statusCode int

	Payload *models.MetadataErrorResponse
}

// Code gets the status code for the v1 metadata services by service Id get default response
func (o *V1MetadataServicesByServiceIDGetDefault) Code() int {
	return o._statusCode
}

func (o *V1MetadataServicesByServiceIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /v1/metadata/services/{serviceId}][%d] V1MetadataServicesByServiceIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *V1MetadataServicesByServiceIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetadataErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
